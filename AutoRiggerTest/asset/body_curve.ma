//Maya ASCII 2016 scene
//Name: body_curve.ma
//Last modified: Sat, Mar 09, 2019 10:05:58 PM
//Codeset: 936
requires maya "2016";
requires -nodeType "ilrOptionsNode" -nodeType "ilrUIOptionsNode" -nodeType "ilrBakeLayerManager"
		 -nodeType "ilrBakeLayer" "Turtle" "2016.0.0";
requires "stereoCamera" "10.0";
currentUnit -l centimeter -a degree -t ntsc;
fileInfo "application" "maya";
fileInfo "product" "Maya 2016";
fileInfo "version" "2016";
fileInfo "cutIdentifier" "201502261600-953408";
fileInfo "osv" "Microsoft Windows 8 Home Premium Edition, 64-bit  (Build 9200)\n";
createNode transform -s -n "persp";
	rename -uid "77BBA617-4BDC-6216-F575-07A6B85EB604";
	setAttr ".v" no;
	setAttr ".t" -type "double3" 3.0788235417338008 225.91207019608723 256.27971911437635 ;
	setAttr ".r" -type "double3" -23.738352726499492 -1080.1999999996619 -8.6968821915090899e-017 ;
createNode camera -s -n "perspShape" -p "persp";
	rename -uid "3F520A73-4545-8F72-E8C4-39AE4A60F7C6";
	setAttr -k off ".v" no;
	setAttr ".fl" 34.999999999999993;
	setAttr ".ncp" 5;
	setAttr ".coi" 276.75985093210414;
	setAttr ".imn" -type "string" "persp";
	setAttr ".den" -type "string" "persp_depth";
	setAttr ".man" -type "string" "persp_mask";
	setAttr ".tp" -type "double3" -1.735493991486226e-029 125.04237206947067 -0.66622522789447436 ;
	setAttr ".hc" -type "string" "viewSet -p %camera";
createNode transform -s -n "top";
	rename -uid "9940286A-4DD3-718D-2E78-D096F7526C2B";
	setAttr ".v" no;
	setAttr ".t" -type "double3" -38.87679155033171 1000 0.16610741330961332 ;
	setAttr ".r" -type "double3" -89.999999999999986 0 0 ;
createNode camera -s -n "topShape" -p "top";
	rename -uid "85E7E7BC-46C0-C2E3-2AD9-BC943937AA85";
	setAttr -k off ".v" no;
	setAttr ".rnd" no;
	setAttr ".ncp" 5;
	setAttr ".coi" 100.1;
	setAttr ".ow" 30.206797211739477;
	setAttr ".imn" -type "string" "top";
	setAttr ".den" -type "string" "top_depth";
	setAttr ".man" -type "string" "top_mask";
	setAttr ".hc" -type "string" "viewSet -t %camera";
	setAttr ".o" yes;
createNode transform -s -n "front";
	rename -uid "9B4D696F-4D31-E9F3-647D-199AF1A68AA0";
	setAttr ".v" no;
	setAttr ".t" -type "double3" 6.1297041508873971 150.16134626270195 1000 ;
createNode camera -s -n "frontShape" -p "front";
	rename -uid "7076B1C4-47F1-DDED-72F9-F78825B04E0C";
	setAttr -k off ".v" no;
	setAttr ".rnd" no;
	setAttr ".ncp" 5;
	setAttr ".coi" 100.1;
	setAttr ".ow" 141.630916505508;
	setAttr ".imn" -type "string" "front";
	setAttr ".den" -type "string" "front_depth";
	setAttr ".man" -type "string" "front_mask";
	setAttr ".hc" -type "string" "viewSet -f %camera";
	setAttr ".o" yes;
createNode transform -s -n "side";
	rename -uid "B3FE6781-4A11-3EBA-B961-F591F8534A29";
	setAttr ".v" no;
	setAttr ".t" -type "double3" 1000 42.615278898735191 -33.903791684370987 ;
	setAttr ".r" -type "double3" 0 89.999999999999986 0 ;
createNode camera -s -n "sideShape" -p "side";
	rename -uid "82C888C4-4B0F-459D-4218-3A8B8756DA26";
	setAttr -k off ".v" no;
	setAttr ".rnd" no;
	setAttr ".ncp" 5;
	setAttr ".coi" 100.1;
	setAttr ".ow" 189.25407780792813;
	setAttr ".imn" -type "string" "side";
	setAttr ".den" -type "string" "side_depth";
	setAttr ".man" -type "string" "side_mask";
	setAttr ".hc" -type "string" "viewSet -s %camera";
	setAttr ".o" yes;
createNode transform -n "back";
	rename -uid "78A16898-41D8-36C9-1C9C-A6882BF688BC";
	setAttr ".v" no;
	setAttr ".t" -type "double3" 0 0 -184.30607746046394 ;
	setAttr ".r" -type "double3" 0 180 0 ;
createNode camera -n "backShape" -p "back";
	rename -uid "4166693A-4413-C577-89B6-8B999E14C5C6";
	setAttr -k off ".v";
	setAttr ".rnd" no;
	setAttr ".coi" 184.30607746046394;
	setAttr ".ow" 68.00815697433768;
	setAttr ".imn" -type "string" "back1";
	setAttr ".den" -type "string" "back1_depth";
	setAttr ".man" -type "string" "back1_mask";
	setAttr ".hc" -type "string" "viewSet -b %camera";
	setAttr ".o" yes;
createNode transform -n "left";
	rename -uid "B029BC06-4E9A-A13A-C1BD-52B4AF876EFA";
	setAttr ".v" no;
	setAttr ".t" -type "double3" -201.11119672374232 85.839575577523647 0.8757974392448904 ;
	setAttr ".r" -type "double3" 0 -89.999999999999986 0 ;
createNode camera -n "leftShape" -p "left";
	rename -uid "A8207099-464F-7D4F-55F6-9BA831A764EA";
	setAttr -k off ".v";
	setAttr ".rnd" no;
	setAttr ".coi" 184.30607746046394;
	setAttr ".ow" 31.493931000698286;
	setAttr ".imn" -type "string" "left1";
	setAttr ".den" -type "string" "left1_depth";
	setAttr ".man" -type "string" "left1_mask";
	setAttr ".hc" -type "string" "viewSet -ls %camera";
	setAttr ".o" yes;
createNode transform -n "side1";
	rename -uid "7B14CB86-46E9-0810-E644-498A7A1EA5D8";
	setAttr ".t" -type "double3" 1000 89.062574844795108 -0.97502575722001184 ;
	setAttr ".r" -type "double3" 0 89.999999999999986 0 ;
createNode camera -n "side1Shape" -p "side1";
	rename -uid "5DF41FFD-4CED-9BAC-91D7-E4B9EC6271E0";
	setAttr -k off ".v";
	setAttr ".rnd" no;
	setAttr ".ncp" 5;
	setAttr ".coi" 100.1;
	setAttr ".ow" 31.070396714920378;
	setAttr ".imn" -type "string" "side";
	setAttr ".den" -type "string" "side_depth";
	setAttr ".man" -type "string" "side_mask";
	setAttr ".hc" -type "string" "viewSet -s %camera";
	setAttr ".o" yes;
createNode transform -n "bodyCurve";
	rename -uid "76F72A6B-4700-35B0-E82B-F78658480349";
createNode transform -n "arm_R_" -p "bodyCurve";
	rename -uid "BA5CF3B1-4843-8030-1C0F-9C9574CCDE8F";
createNode nurbsCurve -n "arm_R_Shape" -p "arm_R_";
	rename -uid "5EA6AFD2-450B-3559-761A-7C9B1E4CFD84";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 3 0 no 3
		4 0 1 2 3
		4
		-3.2480084382057037 146.48684040154072 -4.8955717261040608
		-16.2759 144.40000000000006 -4.5840400000000026
		-28.790299999999988 119.63400000000009 -6.2282399999999978
		-39.497399999999878 98.459200000000038 -2.1103199999999607
		;
createNode transform -n "thumb_R_" -p "bodyCurve";
	rename -uid "319DD9BD-4806-6CB0-41C9-5B8C1F0EB0BA";
createNode nurbsCurve -n "thumb_R_Shape" -p "thumb_R_";
	rename -uid "85CBB8DE-4D13-3363-1449-098A388C8593";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 2 0 no 3
		3 0 1 2
		3
		-38.923952165716443 94.293494349941867 1.0411248947913994
		-38.361744208716111 91.294488864427279 2.7631344961513844
		-37.928797145076764 89.01137501093875 3.9240398453828349
		;
createNode transform -n "index_R_" -p "bodyCurve";
	rename -uid "5D896FD0-437D-7800-FD0B-2D8200B0E8FB";
createNode nurbsCurve -n "index_R_Shape" -p "index_R_";
	rename -uid "10018AF8-45F3-E173-8239-1BAEBC9C0A0F";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 3 0 no 3
		4 0 1 2 3
		4
		-42.655361513647627 88.646128968307252 1.479852397097762
		-43.133805607922625 85.304485349838004 2.197951717124186
		-42.953315045869672 83.133636575795947 2.3973473130637126
		-42.558385270843772 81.749209944482416 2.4255614965192382
		;
createNode transform -n "middle_R_" -p "bodyCurve";
	rename -uid "C667AA8A-4659-7DD5-502B-32B53210F2BE";
createNode nurbsCurve -n "middle_R_Shape" -p "middle_R_";
	rename -uid "8E81E152-4525-1B92-7F46-B3B38AE417B6";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 3 0 no 3
		4 0 1 2 3
		4
		-43.381351845356278 88.548562731271659 -0.67598915355764322
		-44.136952989218599 85.396866089225838 -0.82381510507886335
		-43.845011602034006 82.753485676404082 -1.0830793925942221
		-43.089410458171685 80.831737992598775 -1.4642582244827413
		;
createNode transform -n "ring_R_" -p "bodyCurve";
	rename -uid "08E00FCB-4824-7B05-9B22-C6BF37A94D6D";
createNode nurbsCurve -n "ring_R_Shape" -p "ring_R_";
	rename -uid "241AEA76-4679-4EAF-72DD-63AB6A483FC4";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 3 0 no 3
		4 0 1 2 3
		4
		-43.651926894333727 89.024750286056985 -2.8956210461175065
		-43.86056812780749 86.195329412024634 -3.7981087386967944
		-43.496830528222162 83.69933160651982 -4.8465231841600103
		-43.022608861772362 82.460634033686389 -5.5299094460786726
		;
createNode transform -n "pinky_R_" -p "bodyCurve";
	rename -uid "A43BDD9F-494B-1F76-C9AB-FFB6EA292952";
createNode nurbsCurve -n "pinky_R_Shape" -p "pinky_R_";
	rename -uid "E9B2CEA2-4705-0737-027B-51B1A1FBAAF8";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 3 0 no 3
		4 0 1 2 3
		4
		-43.450156707279213 89.610183186766093 -4.9066689775780246
		-43.695736486476505 87.772934510351845 -6.1030100089164394
		-43.234791771647743 86.266888865269223 -7.1974765545450285
		-42.841812750713878 85.233850181730105 -7.9635395260554436
		;
createNode transform -n "leg_R_" -p "bodyCurve";
	rename -uid "D781EC9A-4E92-B474-0F55-1F88D664D925";
createNode nurbsCurve -n "leg_R_Shape" -p "leg_R_";
	rename -uid "19939BB1-42D1-CDB9-1FF0-D39C21B28FA7";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 4 0 no 3
		5 0 1 2 3 4
		5
		-8.0348150047324047 97.403328436432474 0.023164541899747048
		-11.393980253531026 53.655083318258413 -1.1192479367228614
		-15.114459290186526 10.106851526622833 -6.7698640041296603
		-15.114474417258631 -0.031739259713399193 6.503499978007742
		-15.114474417240888 -0.031739259709903142 15.173548366337371
		;
createNode transform -n "spine_" -p "bodyCurve";
	rename -uid "0D485FA3-4603-311C-6BF9-008D7F59CC3E";
createNode nurbsCurve -n "spine_Shape" -p "spine_";
	rename -uid "AAC99883-40D0-A668-742B-C1B59C5251A3";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 4 0 no 3
		5 0 1 2 5 6
		5
		0 97.406646728515625 -0.081620460184500004
		-1.9327092177914789e-029 103.94649368181297 2.1628620389905326e-014
		-1.3410635388757201e-029 112.83170354459486 2.1628620389905314e-014
		-1.735493991486226e-029 125.04237206947067 -0.66622522789447436
		0.092786568904380751 133.14889098274742 -1.5067613312432253
		;
createNode transform -n "head_" -p "bodyCurve";
	rename -uid "12BDC4C3-47A5-7C61-5EC8-97B2652CD1BE";
createNode nurbsCurve -n "head_Shape" -p "head_";
	rename -uid "424A3E42-451E-6EBE-5BB6-0985D7670049";
	setAttr -k off ".v";
	setAttr ".cc" -type "nurbsCurve" 
		1 3 0 no 3
		4 0 1 2 3
		4
		0.036203738934917774 150.76249876971073 -3.6858725482961283
		0.036203738934917774 156.55542292815883 -1.9452393309768761
		0.036203738934917774 163.60530232853435 0
		0.048146064627836084 181.18137408523395 0
		;
createNode lightLinker -s -n "lightLinker1";
	rename -uid "8729341D-4BAE-56DC-86FC-8C84CA1AB330";
	setAttr -s 14 ".lnk";
	setAttr -s 14 ".slnk";
createNode displayLayerManager -n "layerManager";
	rename -uid "80F5626D-4C4D-06D9-5B63-E0AA0320BC20";
	setAttr ".cdl" 7;
	setAttr -s 7 ".dli[1:6]"  3 1 7 4 5 6;
	setAttr -s 3 ".dli";
createNode displayLayer -n "defaultLayer";
	rename -uid "CCAEB29A-4589-E701-8A71-84BE7CF8D801";
createNode renderLayerManager -n "renderLayerManager";
	rename -uid "7B1E5DC4-4626-3C53-D3F7-0E83F7EB8670";
createNode renderLayer -n "defaultRenderLayer";
	rename -uid "C2BF58DA-4D05-275F-5B90-05BF71AF14EB";
	setAttr ".g" yes;
createNode ilrOptionsNode -s -n "TurtleRenderOptions";
	rename -uid "93CC90B3-492D-5747-48B2-A7A6D0A75DB9";
lockNode -l 1 ;
createNode ilrUIOptionsNode -s -n "TurtleUIOptions";
	rename -uid "11336B38-489B-37ED-2083-46B1ECE4118B";
lockNode -l 1 ;
createNode ilrBakeLayerManager -s -n "TurtleBakeLayerManager";
	rename -uid "AB06EB8A-413E-4491-14BC-90891A730E91";
lockNode -l 1 ;
createNode ilrBakeLayer -s -n "TurtleDefaultBakeLayer";
	rename -uid "6C7636DF-427D-49FA-872E-02B7469DE827";
lockNode -l 1 ;
createNode script -n "uiConfigurationScriptNode";
	rename -uid "595F5466-49F7-A1CF-A018-FC8ADAD28578";
	setAttr ".b" -type "string" (
		"// Maya Mel UI Configuration File.\n//\n//  This script is machine generated.  Edit at your own risk.\n//\n//\n\nglobal string $gMainPane;\nif (`paneLayout -exists $gMainPane`) {\n\n\tglobal int $gUseScenePanelConfig;\n\tint    $useSceneConfig = $gUseScenePanelConfig;\n\tint    $menusOkayInPanels = `optionVar -q allowMenusInPanels`;\tint    $nVisPanes = `paneLayout -q -nvp $gMainPane`;\n\tint    $nPanes = 0;\n\tstring $editorName;\n\tstring $panelName;\n\tstring $itemFilterName;\n\tstring $panelConfig;\n\n\t//\n\t//  get current state of the UI\n\t//\n\tsceneUIReplacement -update $gMainPane;\n\n\t$panelName = `sceneUIReplacement -getNextPanel \"modelPanel\" (localizedPanelLabel(\"Top View\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `modelPanel -unParent -l (localizedPanelLabel(\"Top View\")) -mbv $menusOkayInPanels `;\n\t\t\t$editorName = $panelName;\n            modelEditor -e \n                -camera \"persp\" \n                -useInteractiveMode 0\n                -displayLights \"default\" \n                -displayAppearance \"smoothShaded\" \n"
		+ "                -activeOnly 0\n                -ignorePanZoom 0\n                -wireframeOnShaded 0\n                -headsUpDisplay 1\n                -holdOuts 1\n                -selectionHiliteDisplay 1\n                -useDefaultMaterial 0\n                -bufferMode \"double\" \n                -twoSidedLighting 0\n                -backfaceCulling 0\n                -xray 0\n                -jointXray 0\n                -activeComponentsXray 0\n                -displayTextures 0\n                -smoothWireframe 0\n                -lineWidth 1\n                -textureAnisotropic 0\n                -textureHilight 1\n                -textureSampling 2\n                -textureDisplay \"modulate\" \n                -textureMaxSize 16384\n                -fogging 0\n                -fogSource \"fragment\" \n                -fogMode \"linear\" \n                -fogStart 0\n                -fogEnd 100\n                -fogDensity 0.1\n                -fogColor 0.5 0.5 0.5 1 \n                -depthOfFieldPreview 1\n                -maxConstantTransparency 1\n"
		+ "                -rendererName \"vp2Renderer\" \n                -objectFilterShowInHUD 1\n                -isFiltered 0\n                -colorResolution 256 256 \n                -bumpResolution 512 512 \n                -textureCompression 0\n                -transparencyAlgorithm \"frontAndBackCull\" \n                -transpInShadows 0\n                -cullingOverride \"none\" \n                -lowQualityLighting 0\n                -maximumNumHardwareLights 1\n                -occlusionCulling 0\n                -shadingModel 0\n                -useBaseRenderer 0\n                -useReducedRenderer 0\n                -smallObjectCulling 0\n                -smallObjectThreshold -1 \n                -interactiveDisableShadows 0\n                -interactiveBackFaceCull 0\n                -sortTransparent 1\n                -nurbsCurves 1\n                -nurbsSurfaces 1\n                -polymeshes 1\n                -subdivSurfaces 1\n                -planes 1\n                -lights 1\n                -cameras 1\n                -controlVertices 1\n"
		+ "                -hulls 1\n                -grid 1\n                -imagePlane 1\n                -joints 1\n                -ikHandles 1\n                -deformers 1\n                -dynamics 1\n                -particleInstancers 1\n                -fluids 1\n                -hairSystems 1\n                -follicles 1\n                -nCloths 1\n                -nParticles 1\n                -nRigids 1\n                -dynamicConstraints 1\n                -locators 1\n                -manipulators 1\n                -pluginShapes 1\n                -dimensions 1\n                -handles 1\n                -pivots 1\n                -textures 1\n                -strokes 1\n                -motionTrails 1\n                -clipGhosts 1\n                -greasePencils 1\n                -shadows 0\n                -captureSequenceNumber -1\n                -width 1\n                -height 1\n                -sceneRenderFilter 0\n                $editorName;\n            modelEditor -e -viewSelected 0 $editorName;\n            modelEditor -e \n"
		+ "                -pluginObjects \"gpuCacheDisplayFilter\" 1 \n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tmodelPanel -edit -l (localizedPanelLabel(\"Top View\")) -mbv $menusOkayInPanels  $panelName;\n\t\t$editorName = $panelName;\n        modelEditor -e \n            -camera \"persp\" \n            -useInteractiveMode 0\n            -displayLights \"default\" \n            -displayAppearance \"smoothShaded\" \n            -activeOnly 0\n            -ignorePanZoom 0\n            -wireframeOnShaded 0\n            -headsUpDisplay 1\n            -holdOuts 1\n            -selectionHiliteDisplay 1\n            -useDefaultMaterial 0\n            -bufferMode \"double\" \n            -twoSidedLighting 0\n            -backfaceCulling 0\n            -xray 0\n            -jointXray 0\n            -activeComponentsXray 0\n            -displayTextures 0\n            -smoothWireframe 0\n            -lineWidth 1\n            -textureAnisotropic 0\n            -textureHilight 1\n            -textureSampling 2\n            -textureDisplay \"modulate\" \n"
		+ "            -textureMaxSize 16384\n            -fogging 0\n            -fogSource \"fragment\" \n            -fogMode \"linear\" \n            -fogStart 0\n            -fogEnd 100\n            -fogDensity 0.1\n            -fogColor 0.5 0.5 0.5 1 \n            -depthOfFieldPreview 1\n            -maxConstantTransparency 1\n            -rendererName \"vp2Renderer\" \n            -objectFilterShowInHUD 1\n            -isFiltered 0\n            -colorResolution 256 256 \n            -bumpResolution 512 512 \n            -textureCompression 0\n            -transparencyAlgorithm \"frontAndBackCull\" \n            -transpInShadows 0\n            -cullingOverride \"none\" \n            -lowQualityLighting 0\n            -maximumNumHardwareLights 1\n            -occlusionCulling 0\n            -shadingModel 0\n            -useBaseRenderer 0\n            -useReducedRenderer 0\n            -smallObjectCulling 0\n            -smallObjectThreshold -1 \n            -interactiveDisableShadows 0\n            -interactiveBackFaceCull 0\n            -sortTransparent 1\n"
		+ "            -nurbsCurves 1\n            -nurbsSurfaces 1\n            -polymeshes 1\n            -subdivSurfaces 1\n            -planes 1\n            -lights 1\n            -cameras 1\n            -controlVertices 1\n            -hulls 1\n            -grid 1\n            -imagePlane 1\n            -joints 1\n            -ikHandles 1\n            -deformers 1\n            -dynamics 1\n            -particleInstancers 1\n            -fluids 1\n            -hairSystems 1\n            -follicles 1\n            -nCloths 1\n            -nParticles 1\n            -nRigids 1\n            -dynamicConstraints 1\n            -locators 1\n            -manipulators 1\n            -pluginShapes 1\n            -dimensions 1\n            -handles 1\n            -pivots 1\n            -textures 1\n            -strokes 1\n            -motionTrails 1\n            -clipGhosts 1\n            -greasePencils 1\n            -shadows 0\n            -captureSequenceNumber -1\n            -width 1\n            -height 1\n            -sceneRenderFilter 0\n            $editorName;\n"
		+ "        modelEditor -e -viewSelected 0 $editorName;\n        modelEditor -e \n            -pluginObjects \"gpuCacheDisplayFilter\" 1 \n            $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextPanel \"modelPanel\" (localizedPanelLabel(\"Side View\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `modelPanel -unParent -l (localizedPanelLabel(\"Side View\")) -mbv $menusOkayInPanels `;\n\t\t\t$editorName = $panelName;\n            modelEditor -e \n                -camera \"side\" \n                -useInteractiveMode 0\n                -displayLights \"default\" \n                -displayAppearance \"smoothShaded\" \n                -activeOnly 0\n                -ignorePanZoom 0\n                -wireframeOnShaded 1\n                -headsUpDisplay 1\n                -holdOuts 1\n                -selectionHiliteDisplay 1\n                -useDefaultMaterial 0\n                -bufferMode \"double\" \n                -twoSidedLighting 0\n                -backfaceCulling 0\n"
		+ "                -xray 1\n                -jointXray 1\n                -activeComponentsXray 0\n                -displayTextures 0\n                -smoothWireframe 0\n                -lineWidth 1\n                -textureAnisotropic 0\n                -textureHilight 1\n                -textureSampling 2\n                -textureDisplay \"modulate\" \n                -textureMaxSize 16384\n                -fogging 0\n                -fogSource \"fragment\" \n                -fogMode \"linear\" \n                -fogStart 0\n                -fogEnd 100\n                -fogDensity 0.1\n                -fogColor 0.5 0.5 0.5 1 \n                -depthOfFieldPreview 1\n                -maxConstantTransparency 1\n                -rendererName \"vp2Renderer\" \n                -objectFilterShowInHUD 1\n                -isFiltered 0\n                -colorResolution 256 256 \n                -bumpResolution 512 512 \n                -textureCompression 0\n                -transparencyAlgorithm \"frontAndBackCull\" \n                -transpInShadows 0\n                -cullingOverride \"none\" \n"
		+ "                -lowQualityLighting 0\n                -maximumNumHardwareLights 1\n                -occlusionCulling 0\n                -shadingModel 0\n                -useBaseRenderer 0\n                -useReducedRenderer 0\n                -smallObjectCulling 0\n                -smallObjectThreshold -1 \n                -interactiveDisableShadows 0\n                -interactiveBackFaceCull 0\n                -sortTransparent 1\n                -nurbsCurves 1\n                -nurbsSurfaces 1\n                -polymeshes 1\n                -subdivSurfaces 1\n                -planes 1\n                -lights 1\n                -cameras 1\n                -controlVertices 1\n                -hulls 1\n                -grid 1\n                -imagePlane 1\n                -joints 1\n                -ikHandles 1\n                -deformers 1\n                -dynamics 1\n                -particleInstancers 1\n                -fluids 1\n                -hairSystems 1\n                -follicles 1\n                -nCloths 1\n                -nParticles 1\n"
		+ "                -nRigids 1\n                -dynamicConstraints 1\n                -locators 1\n                -manipulators 1\n                -pluginShapes 1\n                -dimensions 1\n                -handles 1\n                -pivots 1\n                -textures 1\n                -strokes 1\n                -motionTrails 1\n                -clipGhosts 1\n                -greasePencils 1\n                -shadows 0\n                -captureSequenceNumber -1\n                -width 1\n                -height 1\n                -sceneRenderFilter 0\n                $editorName;\n            modelEditor -e -viewSelected 0 $editorName;\n            modelEditor -e \n                -pluginObjects \"gpuCacheDisplayFilter\" 1 \n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tmodelPanel -edit -l (localizedPanelLabel(\"Side View\")) -mbv $menusOkayInPanels  $panelName;\n\t\t$editorName = $panelName;\n        modelEditor -e \n            -camera \"side\" \n            -useInteractiveMode 0\n            -displayLights \"default\" \n"
		+ "            -displayAppearance \"smoothShaded\" \n            -activeOnly 0\n            -ignorePanZoom 0\n            -wireframeOnShaded 1\n            -headsUpDisplay 1\n            -holdOuts 1\n            -selectionHiliteDisplay 1\n            -useDefaultMaterial 0\n            -bufferMode \"double\" \n            -twoSidedLighting 0\n            -backfaceCulling 0\n            -xray 1\n            -jointXray 1\n            -activeComponentsXray 0\n            -displayTextures 0\n            -smoothWireframe 0\n            -lineWidth 1\n            -textureAnisotropic 0\n            -textureHilight 1\n            -textureSampling 2\n            -textureDisplay \"modulate\" \n            -textureMaxSize 16384\n            -fogging 0\n            -fogSource \"fragment\" \n            -fogMode \"linear\" \n            -fogStart 0\n            -fogEnd 100\n            -fogDensity 0.1\n            -fogColor 0.5 0.5 0.5 1 \n            -depthOfFieldPreview 1\n            -maxConstantTransparency 1\n            -rendererName \"vp2Renderer\" \n            -objectFilterShowInHUD 1\n"
		+ "            -isFiltered 0\n            -colorResolution 256 256 \n            -bumpResolution 512 512 \n            -textureCompression 0\n            -transparencyAlgorithm \"frontAndBackCull\" \n            -transpInShadows 0\n            -cullingOverride \"none\" \n            -lowQualityLighting 0\n            -maximumNumHardwareLights 1\n            -occlusionCulling 0\n            -shadingModel 0\n            -useBaseRenderer 0\n            -useReducedRenderer 0\n            -smallObjectCulling 0\n            -smallObjectThreshold -1 \n            -interactiveDisableShadows 0\n            -interactiveBackFaceCull 0\n            -sortTransparent 1\n            -nurbsCurves 1\n            -nurbsSurfaces 1\n            -polymeshes 1\n            -subdivSurfaces 1\n            -planes 1\n            -lights 1\n            -cameras 1\n            -controlVertices 1\n            -hulls 1\n            -grid 1\n            -imagePlane 1\n            -joints 1\n            -ikHandles 1\n            -deformers 1\n            -dynamics 1\n            -particleInstancers 1\n"
		+ "            -fluids 1\n            -hairSystems 1\n            -follicles 1\n            -nCloths 1\n            -nParticles 1\n            -nRigids 1\n            -dynamicConstraints 1\n            -locators 1\n            -manipulators 1\n            -pluginShapes 1\n            -dimensions 1\n            -handles 1\n            -pivots 1\n            -textures 1\n            -strokes 1\n            -motionTrails 1\n            -clipGhosts 1\n            -greasePencils 1\n            -shadows 0\n            -captureSequenceNumber -1\n            -width 1\n            -height 1\n            -sceneRenderFilter 0\n            $editorName;\n        modelEditor -e -viewSelected 0 $editorName;\n        modelEditor -e \n            -pluginObjects \"gpuCacheDisplayFilter\" 1 \n            $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextPanel \"modelPanel\" (localizedPanelLabel(\"Front View\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `modelPanel -unParent -l (localizedPanelLabel(\"Front View\")) -mbv $menusOkayInPanels `;\n"
		+ "\t\t\t$editorName = $panelName;\n            modelEditor -e \n                -camera \"front\" \n                -useInteractiveMode 0\n                -displayLights \"default\" \n                -displayAppearance \"smoothShaded\" \n                -activeOnly 0\n                -ignorePanZoom 0\n                -wireframeOnShaded 0\n                -headsUpDisplay 1\n                -holdOuts 1\n                -selectionHiliteDisplay 1\n                -useDefaultMaterial 0\n                -bufferMode \"double\" \n                -twoSidedLighting 0\n                -backfaceCulling 0\n                -xray 1\n                -jointXray 1\n                -activeComponentsXray 0\n                -displayTextures 0\n                -smoothWireframe 0\n                -lineWidth 1\n                -textureAnisotropic 0\n                -textureHilight 1\n                -textureSampling 2\n                -textureDisplay \"modulate\" \n                -textureMaxSize 16384\n                -fogging 0\n                -fogSource \"fragment\" \n                -fogMode \"linear\" \n"
		+ "                -fogStart 0\n                -fogEnd 100\n                -fogDensity 0.1\n                -fogColor 0.5 0.5 0.5 1 \n                -depthOfFieldPreview 1\n                -maxConstantTransparency 1\n                -rendererName \"vp2Renderer\" \n                -objectFilterShowInHUD 1\n                -isFiltered 0\n                -colorResolution 256 256 \n                -bumpResolution 512 512 \n                -textureCompression 0\n                -transparencyAlgorithm \"frontAndBackCull\" \n                -transpInShadows 0\n                -cullingOverride \"none\" \n                -lowQualityLighting 0\n                -maximumNumHardwareLights 1\n                -occlusionCulling 0\n                -shadingModel 0\n                -useBaseRenderer 0\n                -useReducedRenderer 0\n                -smallObjectCulling 0\n                -smallObjectThreshold -1 \n                -interactiveDisableShadows 0\n                -interactiveBackFaceCull 0\n                -sortTransparent 1\n                -nurbsCurves 1\n"
		+ "                -nurbsSurfaces 1\n                -polymeshes 1\n                -subdivSurfaces 1\n                -planes 1\n                -lights 1\n                -cameras 1\n                -controlVertices 1\n                -hulls 1\n                -grid 1\n                -imagePlane 1\n                -joints 1\n                -ikHandles 1\n                -deformers 1\n                -dynamics 1\n                -particleInstancers 1\n                -fluids 1\n                -hairSystems 1\n                -follicles 1\n                -nCloths 1\n                -nParticles 1\n                -nRigids 1\n                -dynamicConstraints 1\n                -locators 1\n                -manipulators 1\n                -pluginShapes 1\n                -dimensions 1\n                -handles 1\n                -pivots 1\n                -textures 1\n                -strokes 1\n                -motionTrails 1\n                -clipGhosts 1\n                -greasePencils 1\n                -shadows 0\n                -captureSequenceNumber -1\n"
		+ "                -width 1\n                -height 1\n                -sceneRenderFilter 0\n                $editorName;\n            modelEditor -e -viewSelected 0 $editorName;\n            modelEditor -e \n                -pluginObjects \"gpuCacheDisplayFilter\" 1 \n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tmodelPanel -edit -l (localizedPanelLabel(\"Front View\")) -mbv $menusOkayInPanels  $panelName;\n\t\t$editorName = $panelName;\n        modelEditor -e \n            -camera \"front\" \n            -useInteractiveMode 0\n            -displayLights \"default\" \n            -displayAppearance \"smoothShaded\" \n            -activeOnly 0\n            -ignorePanZoom 0\n            -wireframeOnShaded 0\n            -headsUpDisplay 1\n            -holdOuts 1\n            -selectionHiliteDisplay 1\n            -useDefaultMaterial 0\n            -bufferMode \"double\" \n            -twoSidedLighting 0\n            -backfaceCulling 0\n            -xray 1\n            -jointXray 1\n            -activeComponentsXray 0\n"
		+ "            -displayTextures 0\n            -smoothWireframe 0\n            -lineWidth 1\n            -textureAnisotropic 0\n            -textureHilight 1\n            -textureSampling 2\n            -textureDisplay \"modulate\" \n            -textureMaxSize 16384\n            -fogging 0\n            -fogSource \"fragment\" \n            -fogMode \"linear\" \n            -fogStart 0\n            -fogEnd 100\n            -fogDensity 0.1\n            -fogColor 0.5 0.5 0.5 1 \n            -depthOfFieldPreview 1\n            -maxConstantTransparency 1\n            -rendererName \"vp2Renderer\" \n            -objectFilterShowInHUD 1\n            -isFiltered 0\n            -colorResolution 256 256 \n            -bumpResolution 512 512 \n            -textureCompression 0\n            -transparencyAlgorithm \"frontAndBackCull\" \n            -transpInShadows 0\n            -cullingOverride \"none\" \n            -lowQualityLighting 0\n            -maximumNumHardwareLights 1\n            -occlusionCulling 0\n            -shadingModel 0\n            -useBaseRenderer 0\n"
		+ "            -useReducedRenderer 0\n            -smallObjectCulling 0\n            -smallObjectThreshold -1 \n            -interactiveDisableShadows 0\n            -interactiveBackFaceCull 0\n            -sortTransparent 1\n            -nurbsCurves 1\n            -nurbsSurfaces 1\n            -polymeshes 1\n            -subdivSurfaces 1\n            -planes 1\n            -lights 1\n            -cameras 1\n            -controlVertices 1\n            -hulls 1\n            -grid 1\n            -imagePlane 1\n            -joints 1\n            -ikHandles 1\n            -deformers 1\n            -dynamics 1\n            -particleInstancers 1\n            -fluids 1\n            -hairSystems 1\n            -follicles 1\n            -nCloths 1\n            -nParticles 1\n            -nRigids 1\n            -dynamicConstraints 1\n            -locators 1\n            -manipulators 1\n            -pluginShapes 1\n            -dimensions 1\n            -handles 1\n            -pivots 1\n            -textures 1\n            -strokes 1\n            -motionTrails 1\n"
		+ "            -clipGhosts 1\n            -greasePencils 1\n            -shadows 0\n            -captureSequenceNumber -1\n            -width 1\n            -height 1\n            -sceneRenderFilter 0\n            $editorName;\n        modelEditor -e -viewSelected 0 $editorName;\n        modelEditor -e \n            -pluginObjects \"gpuCacheDisplayFilter\" 1 \n            $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextPanel \"modelPanel\" (localizedPanelLabel(\"Persp View\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `modelPanel -unParent -l (localizedPanelLabel(\"Persp View\")) -mbv $menusOkayInPanels `;\n\t\t\t$editorName = $panelName;\n            modelEditor -e \n                -camera \"persp\" \n                -useInteractiveMode 0\n                -displayLights \"default\" \n                -displayAppearance \"smoothShaded\" \n                -activeOnly 0\n                -ignorePanZoom 0\n                -wireframeOnShaded 0\n                -headsUpDisplay 1\n"
		+ "                -holdOuts 0\n                -selectionHiliteDisplay 1\n                -useDefaultMaterial 0\n                -bufferMode \"double\" \n                -twoSidedLighting 0\n                -backfaceCulling 0\n                -xray 0\n                -jointXray 1\n                -activeComponentsXray 0\n                -displayTextures 0\n                -smoothWireframe 0\n                -lineWidth 1\n                -textureAnisotropic 0\n                -textureHilight 1\n                -textureSampling 2\n                -textureDisplay \"modulate\" \n                -textureMaxSize 16384\n                -fogging 0\n                -fogSource \"fragment\" \n                -fogMode \"linear\" \n                -fogStart 0\n                -fogEnd 100\n                -fogDensity 0.1\n                -fogColor 0.5 0.5 0.5 1 \n                -depthOfFieldPreview 1\n                -maxConstantTransparency 1\n                -rendererName \"vp2Renderer\" \n                -objectFilterShowInHUD 1\n                -isFiltered 0\n"
		+ "                -colorResolution 256 256 \n                -bumpResolution 512 512 \n                -textureCompression 0\n                -transparencyAlgorithm \"frontAndBackCull\" \n                -transpInShadows 0\n                -cullingOverride \"none\" \n                -lowQualityLighting 0\n                -maximumNumHardwareLights 1\n                -occlusionCulling 0\n                -shadingModel 0\n                -useBaseRenderer 0\n                -useReducedRenderer 0\n                -smallObjectCulling 0\n                -smallObjectThreshold -1 \n                -interactiveDisableShadows 0\n                -interactiveBackFaceCull 0\n                -sortTransparent 1\n                -nurbsCurves 1\n                -nurbsSurfaces 1\n                -polymeshes 0\n                -subdivSurfaces 1\n                -planes 1\n                -lights 1\n                -cameras 1\n                -controlVertices 1\n                -hulls 1\n                -grid 1\n                -imagePlane 1\n                -joints 1\n"
		+ "                -ikHandles 1\n                -deformers 1\n                -dynamics 1\n                -particleInstancers 1\n                -fluids 1\n                -hairSystems 1\n                -follicles 1\n                -nCloths 1\n                -nParticles 1\n                -nRigids 1\n                -dynamicConstraints 1\n                -locators 1\n                -manipulators 1\n                -pluginShapes 1\n                -dimensions 1\n                -handles 1\n                -pivots 1\n                -textures 1\n                -strokes 1\n                -motionTrails 1\n                -clipGhosts 1\n                -greasePencils 1\n                -shadows 0\n                -captureSequenceNumber -1\n                -width 1024\n                -height 714\n                -sceneRenderFilter 0\n                $editorName;\n            modelEditor -e -viewSelected 0 $editorName;\n            modelEditor -e \n                -pluginObjects \"gpuCacheDisplayFilter\" 1 \n                $editorName;\n\t\t}\n\t} else {\n"
		+ "\t\t$label = `panel -q -label $panelName`;\n\t\tmodelPanel -edit -l (localizedPanelLabel(\"Persp View\")) -mbv $menusOkayInPanels  $panelName;\n\t\t$editorName = $panelName;\n        modelEditor -e \n            -camera \"persp\" \n            -useInteractiveMode 0\n            -displayLights \"default\" \n            -displayAppearance \"smoothShaded\" \n            -activeOnly 0\n            -ignorePanZoom 0\n            -wireframeOnShaded 0\n            -headsUpDisplay 1\n            -holdOuts 0\n            -selectionHiliteDisplay 1\n            -useDefaultMaterial 0\n            -bufferMode \"double\" \n            -twoSidedLighting 0\n            -backfaceCulling 0\n            -xray 0\n            -jointXray 1\n            -activeComponentsXray 0\n            -displayTextures 0\n            -smoothWireframe 0\n            -lineWidth 1\n            -textureAnisotropic 0\n            -textureHilight 1\n            -textureSampling 2\n            -textureDisplay \"modulate\" \n            -textureMaxSize 16384\n            -fogging 0\n            -fogSource \"fragment\" \n"
		+ "            -fogMode \"linear\" \n            -fogStart 0\n            -fogEnd 100\n            -fogDensity 0.1\n            -fogColor 0.5 0.5 0.5 1 \n            -depthOfFieldPreview 1\n            -maxConstantTransparency 1\n            -rendererName \"vp2Renderer\" \n            -objectFilterShowInHUD 1\n            -isFiltered 0\n            -colorResolution 256 256 \n            -bumpResolution 512 512 \n            -textureCompression 0\n            -transparencyAlgorithm \"frontAndBackCull\" \n            -transpInShadows 0\n            -cullingOverride \"none\" \n            -lowQualityLighting 0\n            -maximumNumHardwareLights 1\n            -occlusionCulling 0\n            -shadingModel 0\n            -useBaseRenderer 0\n            -useReducedRenderer 0\n            -smallObjectCulling 0\n            -smallObjectThreshold -1 \n            -interactiveDisableShadows 0\n            -interactiveBackFaceCull 0\n            -sortTransparent 1\n            -nurbsCurves 1\n            -nurbsSurfaces 1\n            -polymeshes 0\n            -subdivSurfaces 1\n"
		+ "            -planes 1\n            -lights 1\n            -cameras 1\n            -controlVertices 1\n            -hulls 1\n            -grid 1\n            -imagePlane 1\n            -joints 1\n            -ikHandles 1\n            -deformers 1\n            -dynamics 1\n            -particleInstancers 1\n            -fluids 1\n            -hairSystems 1\n            -follicles 1\n            -nCloths 1\n            -nParticles 1\n            -nRigids 1\n            -dynamicConstraints 1\n            -locators 1\n            -manipulators 1\n            -pluginShapes 1\n            -dimensions 1\n            -handles 1\n            -pivots 1\n            -textures 1\n            -strokes 1\n            -motionTrails 1\n            -clipGhosts 1\n            -greasePencils 1\n            -shadows 0\n            -captureSequenceNumber -1\n            -width 1024\n            -height 714\n            -sceneRenderFilter 0\n            $editorName;\n        modelEditor -e -viewSelected 0 $editorName;\n        modelEditor -e \n            -pluginObjects \"gpuCacheDisplayFilter\" 1 \n"
		+ "            $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextPanel \"outlinerPanel\" (localizedPanelLabel(\"Outliner\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `outlinerPanel -unParent -l (localizedPanelLabel(\"Outliner\")) -mbv $menusOkayInPanels `;\n\t\t\t$editorName = $panelName;\n            outlinerEditor -e \n                -docTag \"isolOutln_fromSeln\" \n                -showShapes 0\n                -showReferenceNodes 0\n                -showReferenceMembers 0\n                -showAttributes 0\n                -showConnected 0\n                -showAnimCurvesOnly 0\n                -showMuteInfo 0\n                -organizeByLayer 1\n                -showAnimLayerWeight 1\n                -autoExpandLayers 1\n                -autoExpand 0\n                -showDagOnly 1\n                -showAssets 1\n                -showContainedOnly 1\n                -showPublishedAsConnected 0\n                -showContainerContents 1\n                -ignoreDagHierarchy 0\n"
		+ "                -expandConnections 0\n                -showUpstreamCurves 1\n                -showUnitlessCurves 1\n                -showCompounds 1\n                -showLeafs 1\n                -showNumericAttrsOnly 0\n                -highlightActive 1\n                -autoSelectNewObjects 0\n                -doNotSelectNewObjects 0\n                -dropIsParent 1\n                -transmitFilters 0\n                -setFilter \"defaultSetFilter\" \n                -showSetMembers 1\n                -allowMultiSelection 1\n                -alwaysToggleSelect 0\n                -directSelect 0\n                -displayMode \"DAG\" \n                -expandObjects 0\n                -setsIgnoreFilters 1\n                -containersIgnoreFilters 0\n                -editAttrName 0\n                -showAttrValues 0\n                -highlightSecondary 0\n                -showUVAttrsOnly 0\n                -showTextureNodesOnly 0\n                -attrAlphaOrder \"descend\" \n                -animLayerFilterOptions \"selected\" \n                -sortOrder \"none\" \n"
		+ "                -longNames 0\n                -niceNames 1\n                -showNamespace 1\n                -showPinIcons 0\n                -mapMotionTrails 0\n                -ignoreHiddenAttribute 0\n                -ignoreOutlinerColor 0\n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\toutlinerPanel -edit -l (localizedPanelLabel(\"Outliner\")) -mbv $menusOkayInPanels  $panelName;\n\t\t$editorName = $panelName;\n        outlinerEditor -e \n            -docTag \"isolOutln_fromSeln\" \n            -showShapes 0\n            -showReferenceNodes 0\n            -showReferenceMembers 0\n            -showAttributes 0\n            -showConnected 0\n            -showAnimCurvesOnly 0\n            -showMuteInfo 0\n            -organizeByLayer 1\n            -showAnimLayerWeight 1\n            -autoExpandLayers 1\n            -autoExpand 0\n            -showDagOnly 1\n            -showAssets 1\n            -showContainedOnly 1\n            -showPublishedAsConnected 0\n            -showContainerContents 1\n            -ignoreDagHierarchy 0\n"
		+ "            -expandConnections 0\n            -showUpstreamCurves 1\n            -showUnitlessCurves 1\n            -showCompounds 1\n            -showLeafs 1\n            -showNumericAttrsOnly 0\n            -highlightActive 1\n            -autoSelectNewObjects 0\n            -doNotSelectNewObjects 0\n            -dropIsParent 1\n            -transmitFilters 0\n            -setFilter \"defaultSetFilter\" \n            -showSetMembers 1\n            -allowMultiSelection 1\n            -alwaysToggleSelect 0\n            -directSelect 0\n            -displayMode \"DAG\" \n            -expandObjects 0\n            -setsIgnoreFilters 1\n            -containersIgnoreFilters 0\n            -editAttrName 0\n            -showAttrValues 0\n            -highlightSecondary 0\n            -showUVAttrsOnly 0\n            -showTextureNodesOnly 0\n            -attrAlphaOrder \"descend\" \n            -animLayerFilterOptions \"selected\" \n            -sortOrder \"none\" \n            -longNames 0\n            -niceNames 1\n            -showNamespace 1\n            -showPinIcons 0\n"
		+ "            -mapMotionTrails 0\n            -ignoreHiddenAttribute 0\n            -ignoreOutlinerColor 0\n            $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"graphEditor\" (localizedPanelLabel(\"Graph Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"graphEditor\" -l (localizedPanelLabel(\"Graph Editor\")) -mbv $menusOkayInPanels `;\n\n\t\t\t$editorName = ($panelName+\"OutlineEd\");\n            outlinerEditor -e \n                -showShapes 1\n                -showReferenceNodes 0\n                -showReferenceMembers 0\n                -showAttributes 1\n                -showConnected 1\n                -showAnimCurvesOnly 1\n                -showMuteInfo 0\n                -organizeByLayer 1\n                -showAnimLayerWeight 1\n                -autoExpandLayers 1\n                -autoExpand 1\n                -showDagOnly 0\n                -showAssets 1\n                -showContainedOnly 0\n"
		+ "                -showPublishedAsConnected 0\n                -showContainerContents 0\n                -ignoreDagHierarchy 0\n                -expandConnections 1\n                -showUpstreamCurves 1\n                -showUnitlessCurves 1\n                -showCompounds 0\n                -showLeafs 1\n                -showNumericAttrsOnly 1\n                -highlightActive 0\n                -autoSelectNewObjects 1\n                -doNotSelectNewObjects 0\n                -dropIsParent 1\n                -transmitFilters 1\n                -setFilter \"0\" \n                -showSetMembers 0\n                -allowMultiSelection 1\n                -alwaysToggleSelect 0\n                -directSelect 0\n                -displayMode \"DAG\" \n                -expandObjects 0\n                -setsIgnoreFilters 1\n                -containersIgnoreFilters 0\n                -editAttrName 0\n                -showAttrValues 0\n                -highlightSecondary 0\n                -showUVAttrsOnly 0\n                -showTextureNodesOnly 0\n                -attrAlphaOrder \"default\" \n"
		+ "                -animLayerFilterOptions \"allAffecting\" \n                -sortOrder \"none\" \n                -longNames 0\n                -niceNames 1\n                -showNamespace 1\n                -showPinIcons 1\n                -mapMotionTrails 1\n                -ignoreHiddenAttribute 0\n                -ignoreOutlinerColor 0\n                $editorName;\n\n\t\t\t$editorName = ($panelName+\"GraphEd\");\n            animCurveEditor -e \n                -displayKeys 1\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 1\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"integer\" \n                -snapValue \"none\" \n                -showResults \"off\" \n                -showBufferCurves \"off\" \n                -smoothness \"fine\" \n                -resultSamples 1.25\n                -resultScreenSamples 0\n                -resultUpdate \"delayed\" \n                -showUpstreamCurves 1\n                -stackedCurves 0\n                -stackedCurvesMin -1\n"
		+ "                -stackedCurvesMax 1\n                -stackedCurvesSpace 0.2\n                -displayNormalized 0\n                -preSelectionHighlight 0\n                -constrainDrag 0\n                -classicMode 1\n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Graph Editor\")) -mbv $menusOkayInPanels  $panelName;\n\n\t\t\t$editorName = ($panelName+\"OutlineEd\");\n            outlinerEditor -e \n                -showShapes 1\n                -showReferenceNodes 0\n                -showReferenceMembers 0\n                -showAttributes 1\n                -showConnected 1\n                -showAnimCurvesOnly 1\n                -showMuteInfo 0\n                -organizeByLayer 1\n                -showAnimLayerWeight 1\n                -autoExpandLayers 1\n                -autoExpand 1\n                -showDagOnly 0\n                -showAssets 1\n                -showContainedOnly 0\n                -showPublishedAsConnected 0\n                -showContainerContents 0\n"
		+ "                -ignoreDagHierarchy 0\n                -expandConnections 1\n                -showUpstreamCurves 1\n                -showUnitlessCurves 1\n                -showCompounds 0\n                -showLeafs 1\n                -showNumericAttrsOnly 1\n                -highlightActive 0\n                -autoSelectNewObjects 1\n                -doNotSelectNewObjects 0\n                -dropIsParent 1\n                -transmitFilters 1\n                -setFilter \"0\" \n                -showSetMembers 0\n                -allowMultiSelection 1\n                -alwaysToggleSelect 0\n                -directSelect 0\n                -displayMode \"DAG\" \n                -expandObjects 0\n                -setsIgnoreFilters 1\n                -containersIgnoreFilters 0\n                -editAttrName 0\n                -showAttrValues 0\n                -highlightSecondary 0\n                -showUVAttrsOnly 0\n                -showTextureNodesOnly 0\n                -attrAlphaOrder \"default\" \n                -animLayerFilterOptions \"allAffecting\" \n"
		+ "                -sortOrder \"none\" \n                -longNames 0\n                -niceNames 1\n                -showNamespace 1\n                -showPinIcons 1\n                -mapMotionTrails 1\n                -ignoreHiddenAttribute 0\n                -ignoreOutlinerColor 0\n                $editorName;\n\n\t\t\t$editorName = ($panelName+\"GraphEd\");\n            animCurveEditor -e \n                -displayKeys 1\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 1\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"integer\" \n                -snapValue \"none\" \n                -showResults \"off\" \n                -showBufferCurves \"off\" \n                -smoothness \"fine\" \n                -resultSamples 1.25\n                -resultScreenSamples 0\n                -resultUpdate \"delayed\" \n                -showUpstreamCurves 1\n                -stackedCurves 0\n                -stackedCurvesMin -1\n                -stackedCurvesMax 1\n"
		+ "                -stackedCurvesSpace 0.2\n                -displayNormalized 0\n                -preSelectionHighlight 0\n                -constrainDrag 0\n                -classicMode 1\n                $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"dopeSheetPanel\" (localizedPanelLabel(\"Dope Sheet\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"dopeSheetPanel\" -l (localizedPanelLabel(\"Dope Sheet\")) -mbv $menusOkayInPanels `;\n\n\t\t\t$editorName = ($panelName+\"OutlineEd\");\n            outlinerEditor -e \n                -showShapes 1\n                -showReferenceNodes 0\n                -showReferenceMembers 0\n                -showAttributes 1\n                -showConnected 1\n                -showAnimCurvesOnly 1\n                -showMuteInfo 0\n                -organizeByLayer 1\n                -showAnimLayerWeight 1\n                -autoExpandLayers 1\n                -autoExpand 0\n"
		+ "                -showDagOnly 0\n                -showAssets 1\n                -showContainedOnly 0\n                -showPublishedAsConnected 0\n                -showContainerContents 0\n                -ignoreDagHierarchy 0\n                -expandConnections 1\n                -showUpstreamCurves 1\n                -showUnitlessCurves 0\n                -showCompounds 1\n                -showLeafs 1\n                -showNumericAttrsOnly 1\n                -highlightActive 0\n                -autoSelectNewObjects 0\n                -doNotSelectNewObjects 1\n                -dropIsParent 1\n                -transmitFilters 0\n                -setFilter \"0\" \n                -showSetMembers 0\n                -allowMultiSelection 1\n                -alwaysToggleSelect 0\n                -directSelect 0\n                -displayMode \"DAG\" \n                -expandObjects 0\n                -setsIgnoreFilters 1\n                -containersIgnoreFilters 0\n                -editAttrName 0\n                -showAttrValues 0\n                -highlightSecondary 0\n"
		+ "                -showUVAttrsOnly 0\n                -showTextureNodesOnly 0\n                -attrAlphaOrder \"default\" \n                -animLayerFilterOptions \"allAffecting\" \n                -sortOrder \"none\" \n                -longNames 0\n                -niceNames 1\n                -showNamespace 1\n                -showPinIcons 0\n                -mapMotionTrails 1\n                -ignoreHiddenAttribute 0\n                -ignoreOutlinerColor 0\n                $editorName;\n\n\t\t\t$editorName = ($panelName+\"DopeSheetEd\");\n            dopeSheetEditor -e \n                -displayKeys 1\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 0\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"integer\" \n                -snapValue \"none\" \n                -outliner \"dopeSheetPanel1OutlineEd\" \n                -showSummary 1\n                -showScene 0\n                -hierarchyBelow 0\n                -showTicks 1\n                -selectionWindow 0 0 0 0 \n"
		+ "                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Dope Sheet\")) -mbv $menusOkayInPanels  $panelName;\n\n\t\t\t$editorName = ($panelName+\"OutlineEd\");\n            outlinerEditor -e \n                -showShapes 1\n                -showReferenceNodes 0\n                -showReferenceMembers 0\n                -showAttributes 1\n                -showConnected 1\n                -showAnimCurvesOnly 1\n                -showMuteInfo 0\n                -organizeByLayer 1\n                -showAnimLayerWeight 1\n                -autoExpandLayers 1\n                -autoExpand 0\n                -showDagOnly 0\n                -showAssets 1\n                -showContainedOnly 0\n                -showPublishedAsConnected 0\n                -showContainerContents 0\n                -ignoreDagHierarchy 0\n                -expandConnections 1\n                -showUpstreamCurves 1\n                -showUnitlessCurves 0\n                -showCompounds 1\n                -showLeafs 1\n"
		+ "                -showNumericAttrsOnly 1\n                -highlightActive 0\n                -autoSelectNewObjects 0\n                -doNotSelectNewObjects 1\n                -dropIsParent 1\n                -transmitFilters 0\n                -setFilter \"0\" \n                -showSetMembers 0\n                -allowMultiSelection 1\n                -alwaysToggleSelect 0\n                -directSelect 0\n                -displayMode \"DAG\" \n                -expandObjects 0\n                -setsIgnoreFilters 1\n                -containersIgnoreFilters 0\n                -editAttrName 0\n                -showAttrValues 0\n                -highlightSecondary 0\n                -showUVAttrsOnly 0\n                -showTextureNodesOnly 0\n                -attrAlphaOrder \"default\" \n                -animLayerFilterOptions \"allAffecting\" \n                -sortOrder \"none\" \n                -longNames 0\n                -niceNames 1\n                -showNamespace 1\n                -showPinIcons 0\n                -mapMotionTrails 1\n                -ignoreHiddenAttribute 0\n"
		+ "                -ignoreOutlinerColor 0\n                $editorName;\n\n\t\t\t$editorName = ($panelName+\"DopeSheetEd\");\n            dopeSheetEditor -e \n                -displayKeys 1\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 0\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"integer\" \n                -snapValue \"none\" \n                -outliner \"dopeSheetPanel1OutlineEd\" \n                -showSummary 1\n                -showScene 0\n                -hierarchyBelow 0\n                -showTicks 1\n                -selectionWindow 0 0 0 0 \n                $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"clipEditorPanel\" (localizedPanelLabel(\"Trax Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"clipEditorPanel\" -l (localizedPanelLabel(\"Trax Editor\")) -mbv $menusOkayInPanels `;\n"
		+ "\t\t\t$editorName = clipEditorNameFromPanel($panelName);\n            clipEditor -e \n                -displayKeys 0\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 0\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"none\" \n                -snapValue \"none\" \n                -manageSequencer 0 \n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Trax Editor\")) -mbv $menusOkayInPanels  $panelName;\n\n\t\t\t$editorName = clipEditorNameFromPanel($panelName);\n            clipEditor -e \n                -displayKeys 0\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 0\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"none\" \n                -snapValue \"none\" \n                -manageSequencer 0 \n                $editorName;\n\t\tif (!$useSceneConfig) {\n"
		+ "\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"sequenceEditorPanel\" (localizedPanelLabel(\"Camera Sequencer\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"sequenceEditorPanel\" -l (localizedPanelLabel(\"Camera Sequencer\")) -mbv $menusOkayInPanels `;\n\n\t\t\t$editorName = sequenceEditorNameFromPanel($panelName);\n            clipEditor -e \n                -displayKeys 0\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 0\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"none\" \n                -snapValue \"none\" \n                -manageSequencer 1 \n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Camera Sequencer\")) -mbv $menusOkayInPanels  $panelName;\n\n\t\t\t$editorName = sequenceEditorNameFromPanel($panelName);\n            clipEditor -e \n"
		+ "                -displayKeys 0\n                -displayTangents 0\n                -displayActiveKeys 0\n                -displayActiveKeyTangents 0\n                -displayInfinities 0\n                -autoFit 0\n                -snapTime \"none\" \n                -snapValue \"none\" \n                -manageSequencer 1 \n                $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"hyperGraphPanel\" (localizedPanelLabel(\"Hypergraph Hierarchy\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"hyperGraphPanel\" -l (localizedPanelLabel(\"Hypergraph Hierarchy\")) -mbv $menusOkayInPanels `;\n\n\t\t\t$editorName = ($panelName+\"HyperGraphEd\");\n            hyperGraph -e \n                -graphLayoutStyle \"hierarchicalLayout\" \n                -orientation \"horiz\" \n                -mergeConnections 0\n                -zoom 1\n                -animateTransition 0\n                -showRelationships 1\n"
		+ "                -showShapes 0\n                -showDeformers 0\n                -showExpressions 0\n                -showConstraints 0\n                -showConnectionFromSelected 0\n                -showConnectionToSelected 0\n                -showConstraintLabels 0\n                -showUnderworld 0\n                -showInvisible 0\n                -transitionFrames 1\n                -opaqueContainers 0\n                -freeform 0\n                -imagePosition 0 0 \n                -imageScale 1\n                -imageEnabled 0\n                -graphType \"DAG\" \n                -heatMapDisplay 0\n                -updateSelection 1\n                -updateNodeAdded 1\n                -useDrawOverrideColor 0\n                -limitGraphTraversal -1\n                -range 0 0 \n                -iconSize \"smallIcons\" \n                -showCachedConnections 0\n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Hypergraph Hierarchy\")) -mbv $menusOkayInPanels  $panelName;\n"
		+ "\t\t\t$editorName = ($panelName+\"HyperGraphEd\");\n            hyperGraph -e \n                -graphLayoutStyle \"hierarchicalLayout\" \n                -orientation \"horiz\" \n                -mergeConnections 0\n                -zoom 1\n                -animateTransition 0\n                -showRelationships 1\n                -showShapes 0\n                -showDeformers 0\n                -showExpressions 0\n                -showConstraints 0\n                -showConnectionFromSelected 0\n                -showConnectionToSelected 0\n                -showConstraintLabels 0\n                -showUnderworld 0\n                -showInvisible 0\n                -transitionFrames 1\n                -opaqueContainers 0\n                -freeform 0\n                -imagePosition 0 0 \n                -imageScale 1\n                -imageEnabled 0\n                -graphType \"DAG\" \n                -heatMapDisplay 0\n                -updateSelection 1\n                -updateNodeAdded 1\n                -useDrawOverrideColor 0\n                -limitGraphTraversal -1\n"
		+ "                -range 0 0 \n                -iconSize \"smallIcons\" \n                -showCachedConnections 0\n                $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"visorPanel\" (localizedPanelLabel(\"Visor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"visorPanel\" -l (localizedPanelLabel(\"Visor\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Visor\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"createNodePanel\" (localizedPanelLabel(\"Create Node\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"createNodePanel\" -l (localizedPanelLabel(\"Create Node\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n"
		+ "\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Create Node\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"polyTexturePlacementPanel\" (localizedPanelLabel(\"UV Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"polyTexturePlacementPanel\" -l (localizedPanelLabel(\"UV Editor\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"UV Editor\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"renderWindowPanel\" (localizedPanelLabel(\"Render View\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"renderWindowPanel\" -l (localizedPanelLabel(\"Render View\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n"
		+ "\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Render View\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextPanel \"blendShapePanel\" (localizedPanelLabel(\"Blend Shape\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\tblendShapePanel -unParent -l (localizedPanelLabel(\"Blend Shape\")) -mbv $menusOkayInPanels ;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tblendShapePanel -edit -l (localizedPanelLabel(\"Blend Shape\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"dynRelEdPanel\" (localizedPanelLabel(\"Dynamic Relationships\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"dynRelEdPanel\" -l (localizedPanelLabel(\"Dynamic Relationships\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Dynamic Relationships\")) -mbv $menusOkayInPanels  $panelName;\n"
		+ "\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"relationshipPanel\" (localizedPanelLabel(\"Relationship Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"relationshipPanel\" -l (localizedPanelLabel(\"Relationship Editor\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Relationship Editor\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"referenceEditorPanel\" (localizedPanelLabel(\"Reference Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"referenceEditorPanel\" -l (localizedPanelLabel(\"Reference Editor\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Reference Editor\")) -mbv $menusOkayInPanels  $panelName;\n"
		+ "\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"componentEditorPanel\" (localizedPanelLabel(\"Component Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"componentEditorPanel\" -l (localizedPanelLabel(\"Component Editor\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Component Editor\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"dynPaintScriptedPanelType\" (localizedPanelLabel(\"Paint Effects\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"dynPaintScriptedPanelType\" -l (localizedPanelLabel(\"Paint Effects\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Paint Effects\")) -mbv $menusOkayInPanels  $panelName;\n"
		+ "\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"scriptEditorPanel\" (localizedPanelLabel(\"Script Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"scriptEditorPanel\" -l (localizedPanelLabel(\"Script Editor\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Script Editor\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\tif ($useSceneConfig) {\n\t\tscriptedPanel -e -to $panelName;\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"profilerPanel\" (localizedPanelLabel(\"Profiler Tool\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"profilerPanel\" -l (localizedPanelLabel(\"Profiler Tool\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Profiler Tool\")) -mbv $menusOkayInPanels  $panelName;\n"
		+ "\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"Stereo\" (localizedPanelLabel(\"Stereo\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"Stereo\" -l (localizedPanelLabel(\"Stereo\")) -mbv $menusOkayInPanels `;\nstring $editorName = ($panelName+\"Editor\");\n            stereoCameraView -e \n                -camera \"persp\" \n                -useInteractiveMode 0\n                -displayLights \"default\" \n                -displayAppearance \"wireframe\" \n                -activeOnly 0\n                -ignorePanZoom 0\n                -wireframeOnShaded 0\n                -headsUpDisplay 1\n                -holdOuts 1\n                -selectionHiliteDisplay 1\n                -useDefaultMaterial 0\n                -bufferMode \"double\" \n                -twoSidedLighting 1\n                -backfaceCulling 0\n                -xray 0\n                -jointXray 0\n                -activeComponentsXray 0\n                -displayTextures 0\n"
		+ "                -smoothWireframe 0\n                -lineWidth 1\n                -textureAnisotropic 0\n                -textureHilight 1\n                -textureSampling 2\n                -textureDisplay \"modulate\" \n                -textureMaxSize 16384\n                -fogging 0\n                -fogSource \"fragment\" \n                -fogMode \"linear\" \n                -fogStart 0\n                -fogEnd 100\n                -fogDensity 0.1\n                -fogColor 0.5 0.5 0.5 1 \n                -depthOfFieldPreview 1\n                -maxConstantTransparency 1\n                -objectFilterShowInHUD 1\n                -isFiltered 0\n                -colorResolution 4 4 \n                -bumpResolution 4 4 \n                -textureCompression 0\n                -transparencyAlgorithm \"frontAndBackCull\" \n                -transpInShadows 0\n                -cullingOverride \"none\" \n                -lowQualityLighting 0\n                -maximumNumHardwareLights 0\n                -occlusionCulling 0\n                -shadingModel 0\n"
		+ "                -useBaseRenderer 0\n                -useReducedRenderer 0\n                -smallObjectCulling 0\n                -smallObjectThreshold -1 \n                -interactiveDisableShadows 0\n                -interactiveBackFaceCull 0\n                -sortTransparent 1\n                -nurbsCurves 1\n                -nurbsSurfaces 1\n                -polymeshes 1\n                -subdivSurfaces 1\n                -planes 1\n                -lights 1\n                -cameras 1\n                -controlVertices 1\n                -hulls 1\n                -grid 1\n                -imagePlane 1\n                -joints 1\n                -ikHandles 1\n                -deformers 1\n                -dynamics 1\n                -particleInstancers 1\n                -fluids 1\n                -hairSystems 1\n                -follicles 1\n                -nCloths 1\n                -nParticles 1\n                -nRigids 1\n                -dynamicConstraints 1\n                -locators 1\n                -manipulators 1\n                -pluginShapes 1\n"
		+ "                -dimensions 1\n                -handles 1\n                -pivots 1\n                -textures 1\n                -strokes 1\n                -motionTrails 1\n                -clipGhosts 1\n                -greasePencils 1\n                -shadows 0\n                -captureSequenceNumber -1\n                -width 0\n                -height 0\n                -sceneRenderFilter 0\n                -displayMode \"centerEye\" \n                -viewColor 0 0 0 1 \n                -useCustomBackground 1\n                $editorName;\n            stereoCameraView -e -viewSelected 0 $editorName;\n            stereoCameraView -e \n                -pluginObjects \"gpuCacheDisplayFilter\" 1 \n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Stereo\")) -mbv $menusOkayInPanels  $panelName;\nstring $editorName = ($panelName+\"Editor\");\n            stereoCameraView -e \n                -camera \"persp\" \n                -useInteractiveMode 0\n                -displayLights \"default\" \n"
		+ "                -displayAppearance \"wireframe\" \n                -activeOnly 0\n                -ignorePanZoom 0\n                -wireframeOnShaded 0\n                -headsUpDisplay 1\n                -holdOuts 1\n                -selectionHiliteDisplay 1\n                -useDefaultMaterial 0\n                -bufferMode \"double\" \n                -twoSidedLighting 1\n                -backfaceCulling 0\n                -xray 0\n                -jointXray 0\n                -activeComponentsXray 0\n                -displayTextures 0\n                -smoothWireframe 0\n                -lineWidth 1\n                -textureAnisotropic 0\n                -textureHilight 1\n                -textureSampling 2\n                -textureDisplay \"modulate\" \n                -textureMaxSize 16384\n                -fogging 0\n                -fogSource \"fragment\" \n                -fogMode \"linear\" \n                -fogStart 0\n                -fogEnd 100\n                -fogDensity 0.1\n                -fogColor 0.5 0.5 0.5 1 \n                -depthOfFieldPreview 1\n"
		+ "                -maxConstantTransparency 1\n                -objectFilterShowInHUD 1\n                -isFiltered 0\n                -colorResolution 4 4 \n                -bumpResolution 4 4 \n                -textureCompression 0\n                -transparencyAlgorithm \"frontAndBackCull\" \n                -transpInShadows 0\n                -cullingOverride \"none\" \n                -lowQualityLighting 0\n                -maximumNumHardwareLights 0\n                -occlusionCulling 0\n                -shadingModel 0\n                -useBaseRenderer 0\n                -useReducedRenderer 0\n                -smallObjectCulling 0\n                -smallObjectThreshold -1 \n                -interactiveDisableShadows 0\n                -interactiveBackFaceCull 0\n                -sortTransparent 1\n                -nurbsCurves 1\n                -nurbsSurfaces 1\n                -polymeshes 1\n                -subdivSurfaces 1\n                -planes 1\n                -lights 1\n                -cameras 1\n                -controlVertices 1\n"
		+ "                -hulls 1\n                -grid 1\n                -imagePlane 1\n                -joints 1\n                -ikHandles 1\n                -deformers 1\n                -dynamics 1\n                -particleInstancers 1\n                -fluids 1\n                -hairSystems 1\n                -follicles 1\n                -nCloths 1\n                -nParticles 1\n                -nRigids 1\n                -dynamicConstraints 1\n                -locators 1\n                -manipulators 1\n                -pluginShapes 1\n                -dimensions 1\n                -handles 1\n                -pivots 1\n                -textures 1\n                -strokes 1\n                -motionTrails 1\n                -clipGhosts 1\n                -greasePencils 1\n                -shadows 0\n                -captureSequenceNumber -1\n                -width 0\n                -height 0\n                -sceneRenderFilter 0\n                -displayMode \"centerEye\" \n                -viewColor 0 0 0 1 \n                -useCustomBackground 1\n"
		+ "                $editorName;\n            stereoCameraView -e -viewSelected 0 $editorName;\n            stereoCameraView -e \n                -pluginObjects \"gpuCacheDisplayFilter\" 1 \n                $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"hyperShadePanel\" (localizedPanelLabel(\"Hypershade\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"hyperShadePanel\" -l (localizedPanelLabel(\"Hypershade\")) -mbv $menusOkayInPanels `;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Hypershade\")) -mbv $menusOkayInPanels  $panelName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\t$panelName = `sceneUIReplacement -getNextScriptedPanel \"nodeEditorPanel\" (localizedPanelLabel(\"Node Editor\")) `;\n\tif (\"\" == $panelName) {\n\t\tif ($useSceneConfig) {\n\t\t\t$panelName = `scriptedPanel -unParent  -type \"nodeEditorPanel\" -l (localizedPanelLabel(\"Node Editor\")) -mbv $menusOkayInPanels `;\n"
		+ "\t\t\t$editorName = ($panelName+\"NodeEditorEd\");\n            nodeEditor -e \n                -allAttributes 0\n                -allNodes 0\n                -autoSizeNodes 1\n                -consistentNameSize 1\n                -createNodeCommand \"nodeEdCreateNodeCommand\" \n                -defaultPinnedState 0\n                -additiveGraphingMode 0\n                -settingsChangedCallback \"nodeEdSyncControls\" \n                -traversalDepthLimit -1\n                -keyPressCommand \"nodeEdKeyPressCommand\" \n                -nodeTitleMode \"name\" \n                -gridSnap 0\n                -gridVisibility 1\n                -popupMenuScript \"nodeEdBuildPanelMenus\" \n                -showNamespace 1\n                -showShapes 1\n                -showSGShapes 0\n                -showTransforms 1\n                -useAssets 1\n                -syncedSelection 1\n                -extendToShapes 1\n                -activeTab -1\n                -editorMode \"default\" \n                $editorName;\n\t\t}\n\t} else {\n\t\t$label = `panel -q -label $panelName`;\n"
		+ "\t\tscriptedPanel -edit -l (localizedPanelLabel(\"Node Editor\")) -mbv $menusOkayInPanels  $panelName;\n\n\t\t\t$editorName = ($panelName+\"NodeEditorEd\");\n            nodeEditor -e \n                -allAttributes 0\n                -allNodes 0\n                -autoSizeNodes 1\n                -consistentNameSize 1\n                -createNodeCommand \"nodeEdCreateNodeCommand\" \n                -defaultPinnedState 0\n                -additiveGraphingMode 0\n                -settingsChangedCallback \"nodeEdSyncControls\" \n                -traversalDepthLimit -1\n                -keyPressCommand \"nodeEdKeyPressCommand\" \n                -nodeTitleMode \"name\" \n                -gridSnap 0\n                -gridVisibility 1\n                -popupMenuScript \"nodeEdBuildPanelMenus\" \n                -showNamespace 1\n                -showShapes 1\n                -showSGShapes 0\n                -showTransforms 1\n                -useAssets 1\n                -syncedSelection 1\n                -extendToShapes 1\n                -activeTab -1\n                -editorMode \"default\" \n"
		+ "                $editorName;\n\t\tif (!$useSceneConfig) {\n\t\t\tpanel -e -l $label $panelName;\n\t\t}\n\t}\n\n\n\tif ($useSceneConfig) {\n        string $configName = `getPanel -cwl (localizedPanelLabel(\"Current Layout\"))`;\n        if (\"\" != $configName) {\n\t\t\tpanelConfiguration -edit -label (localizedPanelLabel(\"Current Layout\")) \n\t\t\t\t-defaultImage \"vacantCell.xP:/\"\n\t\t\t\t-image \"\"\n\t\t\t\t-sc false\n\t\t\t\t-configString \"global string $gMainPane; paneLayout -e -cn \\\"vertical2\\\" -ps 1 15 100 -ps 2 85 100 $gMainPane;\"\n\t\t\t\t-removeAllPanels\n\t\t\t\t-ap false\n\t\t\t\t\t(localizedPanelLabel(\"Outliner\")) \n\t\t\t\t\t\"outlinerPanel\"\n"
		+ "\t\t\t\t\t\"$panelName = `outlinerPanel -unParent -l (localizedPanelLabel(\\\"Outliner\\\")) -mbv $menusOkayInPanels `;\\n$editorName = $panelName;\\noutlinerEditor -e \\n    -docTag \\\"isolOutln_fromSeln\\\" \\n    -showShapes 0\\n    -showReferenceNodes 0\\n    -showReferenceMembers 0\\n    -showAttributes 0\\n    -showConnected 0\\n    -showAnimCurvesOnly 0\\n    -showMuteInfo 0\\n    -organizeByLayer 1\\n    -showAnimLayerWeight 1\\n    -autoExpandLayers 1\\n    -autoExpand 0\\n    -showDagOnly 1\\n    -showAssets 1\\n    -showContainedOnly 1\\n    -showPublishedAsConnected 0\\n    -showContainerContents 1\\n    -ignoreDagHierarchy 0\\n    -expandConnections 0\\n    -showUpstreamCurves 1\\n    -showUnitlessCurves 1\\n    -showCompounds 1\\n    -showLeafs 1\\n    -showNumericAttrsOnly 0\\n    -highlightActive 1\\n    -autoSelectNewObjects 0\\n    -doNotSelectNewObjects 0\\n    -dropIsParent 1\\n    -transmitFilters 0\\n    -setFilter \\\"defaultSetFilter\\\" \\n    -showSetMembers 1\\n    -allowMultiSelection 1\\n    -alwaysToggleSelect 0\\n    -directSelect 0\\n    -displayMode \\\"DAG\\\" \\n    -expandObjects 0\\n    -setsIgnoreFilters 1\\n    -containersIgnoreFilters 0\\n    -editAttrName 0\\n    -showAttrValues 0\\n    -highlightSecondary 0\\n    -showUVAttrsOnly 0\\n    -showTextureNodesOnly 0\\n    -attrAlphaOrder \\\"descend\\\" \\n    -animLayerFilterOptions \\\"selected\\\" \\n    -sortOrder \\\"none\\\" \\n    -longNames 0\\n    -niceNames 1\\n    -showNamespace 1\\n    -showPinIcons 0\\n    -mapMotionTrails 0\\n    -ignoreHiddenAttribute 0\\n    -ignoreOutlinerColor 0\\n    $editorName\"\n"
		+ "\t\t\t\t\t\"outlinerPanel -edit -l (localizedPanelLabel(\\\"Outliner\\\")) -mbv $menusOkayInPanels  $panelName;\\n$editorName = $panelName;\\noutlinerEditor -e \\n    -docTag \\\"isolOutln_fromSeln\\\" \\n    -showShapes 0\\n    -showReferenceNodes 0\\n    -showReferenceMembers 0\\n    -showAttributes 0\\n    -showConnected 0\\n    -showAnimCurvesOnly 0\\n    -showMuteInfo 0\\n    -organizeByLayer 1\\n    -showAnimLayerWeight 1\\n    -autoExpandLayers 1\\n    -autoExpand 0\\n    -showDagOnly 1\\n    -showAssets 1\\n    -showContainedOnly 1\\n    -showPublishedAsConnected 0\\n    -showContainerContents 1\\n    -ignoreDagHierarchy 0\\n    -expandConnections 0\\n    -showUpstreamCurves 1\\n    -showUnitlessCurves 1\\n    -showCompounds 1\\n    -showLeafs 1\\n    -showNumericAttrsOnly 0\\n    -highlightActive 1\\n    -autoSelectNewObjects 0\\n    -doNotSelectNewObjects 0\\n    -dropIsParent 1\\n    -transmitFilters 0\\n    -setFilter \\\"defaultSetFilter\\\" \\n    -showSetMembers 1\\n    -allowMultiSelection 1\\n    -alwaysToggleSelect 0\\n    -directSelect 0\\n    -displayMode \\\"DAG\\\" \\n    -expandObjects 0\\n    -setsIgnoreFilters 1\\n    -containersIgnoreFilters 0\\n    -editAttrName 0\\n    -showAttrValues 0\\n    -highlightSecondary 0\\n    -showUVAttrsOnly 0\\n    -showTextureNodesOnly 0\\n    -attrAlphaOrder \\\"descend\\\" \\n    -animLayerFilterOptions \\\"selected\\\" \\n    -sortOrder \\\"none\\\" \\n    -longNames 0\\n    -niceNames 1\\n    -showNamespace 1\\n    -showPinIcons 0\\n    -mapMotionTrails 0\\n    -ignoreHiddenAttribute 0\\n    -ignoreOutlinerColor 0\\n    $editorName\"\n"
		+ "\t\t\t\t-ap false\n\t\t\t\t\t(localizedPanelLabel(\"Persp View\")) \n\t\t\t\t\t\"modelPanel\"\n"
		+ "\t\t\t\t\t\"$panelName = `modelPanel -unParent -l (localizedPanelLabel(\\\"Persp View\\\")) -mbv $menusOkayInPanels `;\\n$editorName = $panelName;\\nmodelEditor -e \\n    -cam `findStartUpCamera persp` \\n    -useInteractiveMode 0\\n    -displayLights \\\"default\\\" \\n    -displayAppearance \\\"smoothShaded\\\" \\n    -activeOnly 0\\n    -ignorePanZoom 0\\n    -wireframeOnShaded 0\\n    -headsUpDisplay 1\\n    -holdOuts 0\\n    -selectionHiliteDisplay 1\\n    -useDefaultMaterial 0\\n    -bufferMode \\\"double\\\" \\n    -twoSidedLighting 0\\n    -backfaceCulling 0\\n    -xray 0\\n    -jointXray 1\\n    -activeComponentsXray 0\\n    -displayTextures 0\\n    -smoothWireframe 0\\n    -lineWidth 1\\n    -textureAnisotropic 0\\n    -textureHilight 1\\n    -textureSampling 2\\n    -textureDisplay \\\"modulate\\\" \\n    -textureMaxSize 16384\\n    -fogging 0\\n    -fogSource \\\"fragment\\\" \\n    -fogMode \\\"linear\\\" \\n    -fogStart 0\\n    -fogEnd 100\\n    -fogDensity 0.1\\n    -fogColor 0.5 0.5 0.5 1 \\n    -depthOfFieldPreview 1\\n    -maxConstantTransparency 1\\n    -rendererName \\\"vp2Renderer\\\" \\n    -objectFilterShowInHUD 1\\n    -isFiltered 0\\n    -colorResolution 256 256 \\n    -bumpResolution 512 512 \\n    -textureCompression 0\\n    -transparencyAlgorithm \\\"frontAndBackCull\\\" \\n    -transpInShadows 0\\n    -cullingOverride \\\"none\\\" \\n    -lowQualityLighting 0\\n    -maximumNumHardwareLights 1\\n    -occlusionCulling 0\\n    -shadingModel 0\\n    -useBaseRenderer 0\\n    -useReducedRenderer 0\\n    -smallObjectCulling 0\\n    -smallObjectThreshold -1 \\n    -interactiveDisableShadows 0\\n    -interactiveBackFaceCull 0\\n    -sortTransparent 1\\n    -nurbsCurves 1\\n    -nurbsSurfaces 1\\n    -polymeshes 0\\n    -subdivSurfaces 1\\n    -planes 1\\n    -lights 1\\n    -cameras 1\\n    -controlVertices 1\\n    -hulls 1\\n    -grid 1\\n    -imagePlane 1\\n    -joints 1\\n    -ikHandles 1\\n    -deformers 1\\n    -dynamics 1\\n    -particleInstancers 1\\n    -fluids 1\\n    -hairSystems 1\\n    -follicles 1\\n    -nCloths 1\\n    -nParticles 1\\n    -nRigids 1\\n    -dynamicConstraints 1\\n    -locators 1\\n    -manipulators 1\\n    -pluginShapes 1\\n    -dimensions 1\\n    -handles 1\\n    -pivots 1\\n    -textures 1\\n    -strokes 1\\n    -motionTrails 1\\n    -clipGhosts 1\\n    -greasePencils 1\\n    -shadows 0\\n    -captureSequenceNumber -1\\n    -width 1024\\n    -height 714\\n    -sceneRenderFilter 0\\n    $editorName;\\nmodelEditor -e -viewSelected 0 $editorName;\\nmodelEditor -e \\n    -pluginObjects \\\"gpuCacheDisplayFilter\\\" 1 \\n    $editorName\"\n"
		+ "\t\t\t\t\t\"modelPanel -edit -l (localizedPanelLabel(\\\"Persp View\\\")) -mbv $menusOkayInPanels  $panelName;\\n$editorName = $panelName;\\nmodelEditor -e \\n    -cam `findStartUpCamera persp` \\n    -useInteractiveMode 0\\n    -displayLights \\\"default\\\" \\n    -displayAppearance \\\"smoothShaded\\\" \\n    -activeOnly 0\\n    -ignorePanZoom 0\\n    -wireframeOnShaded 0\\n    -headsUpDisplay 1\\n    -holdOuts 0\\n    -selectionHiliteDisplay 1\\n    -useDefaultMaterial 0\\n    -bufferMode \\\"double\\\" \\n    -twoSidedLighting 0\\n    -backfaceCulling 0\\n    -xray 0\\n    -jointXray 1\\n    -activeComponentsXray 0\\n    -displayTextures 0\\n    -smoothWireframe 0\\n    -lineWidth 1\\n    -textureAnisotropic 0\\n    -textureHilight 1\\n    -textureSampling 2\\n    -textureDisplay \\\"modulate\\\" \\n    -textureMaxSize 16384\\n    -fogging 0\\n    -fogSource \\\"fragment\\\" \\n    -fogMode \\\"linear\\\" \\n    -fogStart 0\\n    -fogEnd 100\\n    -fogDensity 0.1\\n    -fogColor 0.5 0.5 0.5 1 \\n    -depthOfFieldPreview 1\\n    -maxConstantTransparency 1\\n    -rendererName \\\"vp2Renderer\\\" \\n    -objectFilterShowInHUD 1\\n    -isFiltered 0\\n    -colorResolution 256 256 \\n    -bumpResolution 512 512 \\n    -textureCompression 0\\n    -transparencyAlgorithm \\\"frontAndBackCull\\\" \\n    -transpInShadows 0\\n    -cullingOverride \\\"none\\\" \\n    -lowQualityLighting 0\\n    -maximumNumHardwareLights 1\\n    -occlusionCulling 0\\n    -shadingModel 0\\n    -useBaseRenderer 0\\n    -useReducedRenderer 0\\n    -smallObjectCulling 0\\n    -smallObjectThreshold -1 \\n    -interactiveDisableShadows 0\\n    -interactiveBackFaceCull 0\\n    -sortTransparent 1\\n    -nurbsCurves 1\\n    -nurbsSurfaces 1\\n    -polymeshes 0\\n    -subdivSurfaces 1\\n    -planes 1\\n    -lights 1\\n    -cameras 1\\n    -controlVertices 1\\n    -hulls 1\\n    -grid 1\\n    -imagePlane 1\\n    -joints 1\\n    -ikHandles 1\\n    -deformers 1\\n    -dynamics 1\\n    -particleInstancers 1\\n    -fluids 1\\n    -hairSystems 1\\n    -follicles 1\\n    -nCloths 1\\n    -nParticles 1\\n    -nRigids 1\\n    -dynamicConstraints 1\\n    -locators 1\\n    -manipulators 1\\n    -pluginShapes 1\\n    -dimensions 1\\n    -handles 1\\n    -pivots 1\\n    -textures 1\\n    -strokes 1\\n    -motionTrails 1\\n    -clipGhosts 1\\n    -greasePencils 1\\n    -shadows 0\\n    -captureSequenceNumber -1\\n    -width 1024\\n    -height 714\\n    -sceneRenderFilter 0\\n    $editorName;\\nmodelEditor -e -viewSelected 0 $editorName;\\nmodelEditor -e \\n    -pluginObjects \\\"gpuCacheDisplayFilter\\\" 1 \\n    $editorName\"\n"
		+ "\t\t\t\t$configName;\n\n            setNamedPanelLayout (localizedPanelLabel(\"Current Layout\"));\n        }\n\n        panelHistory -e -clear mainPanelHistory;\n        setFocus `paneLayout -q -p1 $gMainPane`;\n        sceneUIReplacement -deleteRemaining;\n        sceneUIReplacement -clear;\n\t}\n\n\ngrid -spacing 5 -size 12 -divisions 5 -displayAxes yes -displayGridLines yes -displayDivisionLines yes -displayPerspectiveLabels no -displayOrthographicLabels no -displayAxesBold yes -perspectiveLabelPosition axis -orthographicLabelPosition edge;\nviewManip -drawCompass 0 -compassAngle 0 -frontParameters \"\" -homeParameters \"\" -selectionLockParameters \"\";\n}\n");
	setAttr ".st" 3;
createNode script -n "sceneConfigurationScriptNode";
	rename -uid "07EA6B41-42ED-97A9-4FA5-6385E22093BF";
	setAttr ".b" -type "string" "playbackOptions -min 0 -max 150 -ast 0 -aet 250 ";
	setAttr ".st" 6;
createNode nodeGraphEditorInfo -n "hyperShadePrimaryNodeEditorSavedTabsInfo";
	rename -uid "2113260B-46CE-665B-9166-EEA2645D432D";
	setAttr ".tgi[0].tn" -type "string" "Untitled_1";
	setAttr ".tgi[0].vl" -type "double2" -351.19046223542108 -323.80951094248991 ;
	setAttr ".tgi[0].vh" -type "double2" 335.71427237419914 339.2857008037119 ;
createNode blinn -n "MSPINE1_MAT";
	rename -uid "0FF9814A-414D-F05E-8033-9293B6C9E708";
	setAttr ".ihi" 0;
	setAttr ".dc" 1;
	setAttr ".tcf" 0;
	setAttr ".trsd" 0;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 0;
	setAttr ".ec" 0;
	setAttr ".sro" 0;
createNode shadingEngine -n "set1";
	rename -uid "FA883B0D-464E-7A55-41F7-B68ECB45A369";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo1";
	rename -uid "7325AED7-497C-0669-870E-80BC8A19C667";
createNode blinn -n "LLEG1_MAT";
	rename -uid "10024955-4787-624B-F622-369D15C453D9";
	setAttr ".ihi" 0;
	setAttr ".dc" 1;
	setAttr ".tcf" 0;
	setAttr ".trsd" 0;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 0;
	setAttr ".ec" 0;
	setAttr ".sro" 0;
createNode shadingEngine -n "set2";
	rename -uid "C8EE7D9D-44B9-1428-C01B-CD89E1033334";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo2";
	rename -uid "3FB53DF8-4226-F120-D658-94822A0B48F7";
createNode clamp -n "c_L_toe_v1_CMP";
	rename -uid "3C9EBA24-4A90-A631-CE17-FC96F1FABADF";
	setAttr ".ihi" 0;
createNode clamp -n "c_L_ball_v1_CMP";
	rename -uid "F2FE53B5-4C06-E769-3F17-F5B02D8DF9E2";
	setAttr ".ihi" 0;
createNode setRange -n "c_L_ball_v1_SR";
	rename -uid "7A905D87-4E0D-5CBB-74F8-31BF700B14A5";
	setAttr ".ihi" 0;
	setAttr ".m" -type "float3" 1 0 0 ;
createNode clamp -n "c_L_bend_v1_CMP";
	rename -uid "EFDAB65B-41F9-B63F-CCC7-99A81D052012";
	setAttr ".ihi" 0;
createNode setRange -n "c_L_bend_v1_SR";
	rename -uid "BDEA0EF6-4632-586B-4C86-078DB62AEC83";
	setAttr ".ihi" 0;
	setAttr ".m" -type "float3" 1 0 0 ;
createNode plusMinusAverage -n "c_L_foot_v1_PMA";
	rename -uid "CF22A443-494F-0E6B-0705-498EBEDBC80D";
	setAttr ".ihi" 0;
	setAttr ".op" 2;
	setAttr -s 2 ".i1[0:1]"  1 0;
createNode multiplyDivide -n "c_L_footMult1_v1_MDN";
	rename -uid "D371BD0F-40E8-A859-E7A9-3E9D5D8C21F6";
	setAttr ".ihi" 0;
createNode multiplyDivide -n "c_L_footMult2_v1_MDN";
	rename -uid "40CCCBB4-47F5-03A7-566F-52815FEF5F9E";
	setAttr ".ihi" 0;
createNode multiplyDivide -n "c_L_ballFlip_v1_MDN";
	rename -uid "FD8E1CC7-4CF6-5D10-ABAB-20BD357FCFCB";
	setAttr ".ihi" 0;
	setAttr ".i2" -type "float3" -1 -1 -1 ;
createNode blinn -n "RLEG1_MAT";
	rename -uid "454DEA4B-4F59-1EE5-AEDC-A380A47DD59F";
	setAttr ".ihi" 0;
	setAttr ".dc" 1;
	setAttr ".tcf" 0;
	setAttr ".trsd" 0;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 0;
	setAttr ".ec" 0;
	setAttr ".sro" 0;
createNode shadingEngine -n "set3";
	rename -uid "6D6EA68C-4414-E4EB-E00F-7CA3D1E2D736";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo3";
	rename -uid "632E50D6-4664-ED05-3642-C8B897FB4E36";
createNode clamp -n "c_R_toe_v1_CMP";
	rename -uid "E30421B8-4559-4FA9-744C-84B1EB59E941";
	setAttr ".ihi" 0;
createNode clamp -n "c_R_ball_v1_CMP";
	rename -uid "084FAF4D-4E89-7D54-B3CE-4D9B4DA18912";
	setAttr ".ihi" 0;
createNode setRange -n "c_R_ball_v1_SR";
	rename -uid "6712A722-48EC-B387-6D7B-99A0560F8786";
	setAttr ".ihi" 0;
	setAttr ".m" -type "float3" 1 0 0 ;
createNode clamp -n "c_R_bend_v1_CMP";
	rename -uid "0272B15F-4803-799F-C728-D89B2BDD22EB";
	setAttr ".ihi" 0;
createNode setRange -n "c_R_bend_v1_SR";
	rename -uid "8FCC21CB-4F10-659A-2C0B-CB94D0C1FE96";
	setAttr ".ihi" 0;
	setAttr ".m" -type "float3" 1 0 0 ;
createNode plusMinusAverage -n "c_R_foot_v1_PMA";
	rename -uid "902D2A9D-4225-E558-17F7-7DB2863AFF9F";
	setAttr ".ihi" 0;
	setAttr ".op" 2;
	setAttr -s 2 ".i1[0:1]"  1 0;
createNode multiplyDivide -n "c_R_footMult1_v1_MDN";
	rename -uid "4955CD13-45CC-BF21-A9C8-04A3972462BC";
	setAttr ".ihi" 0;
createNode multiplyDivide -n "c_R_footMult2_v1_MDN";
	rename -uid "F2B2F63B-40D9-BD81-2115-51984DE22ABD";
	setAttr ".ihi" 0;
createNode multiplyDivide -n "c_R_ballFlip_v1_MDN";
	rename -uid "17544F70-448D-5988-F76B-86839691F544";
	setAttr ".ihi" 0;
	setAttr ".i2" -type "float3" -1 -1 -1 ;
createNode blinn -n "RARM1_MAT";
	rename -uid "D30FE408-4557-34E6-2908-0E9952908F13";
	setAttr ".ihi" 0;
	setAttr ".dc" 1;
	setAttr ".tcf" 0;
	setAttr ".trsd" 0;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 0;
	setAttr ".ec" 0;
	setAttr ".sro" 0;
createNode shadingEngine -n "set4";
	rename -uid "97067287-43C6-3A4B-DFC9-25915745A326";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo4";
	rename -uid "27B6EAE5-4B9C-203B-123A-6CB0253D6AB8";
createNode blinn -n "LARM1_MAT";
	rename -uid "7B8E66BE-4CD4-89EA-E60B-218C6DD80C7A";
	setAttr ".ihi" 0;
	setAttr ".dc" 1;
	setAttr ".tcf" 0;
	setAttr ".trsd" 0;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 0;
	setAttr ".ec" 0;
	setAttr ".sro" 0;
createNode shadingEngine -n "set5";
	rename -uid "15450E78-4AD6-65F8-7A10-DCB4A5C2D0C7";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo5";
	rename -uid "0F59B84C-4A82-E85B-E66A-20BD44AAE91C";
createNode phong -n "FBXASC0489FBXASC032FBXASC045FBXASC032Default3";
	rename -uid "5F001976-4977-CA27-A21E-D6890B53D626";
	setAttr ".dc" 1;
	setAttr ".c" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".ambc" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 1;
	setAttr ".cp" 2;
createNode shadingEngine -n "R_luWeiLouBladeSG";
	rename -uid "5798730C-49A0-1349-727A-CDB01A174D52";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo6";
	rename -uid "32CE6EEF-4DC3-8A5E-607F-C688061DA269";
createNode blindDataTemplate -n "blindDataTemplate1";
	rename -uid "FCF7C7B4-4C6A-C525-8F7B-FC85BE46083A";
	addAttr -ci true -sn "MaxVisibility" -ln "MaxVisibility" -min 0 -max 1 -at "bool";
	setAttr ".tid" 16180;
createNode phong -n "FBXASC0489FBXASC032FBXASC045FBXASC032Default4";
	rename -uid "3E8F59AC-474B-CE9C-5811-198F17B240ED";
	setAttr ".dc" 1;
	setAttr ".c" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".ambc" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 1;
	setAttr ".cp" 2;
createNode shadingEngine -n "L_axeSG";
	rename -uid "17DF3953-4B2C-69B7-7F4A-1F9F844143C3";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo7";
	rename -uid "D9F6B10B-427D-026B-F7EE-30881B46E995";
createNode phong -n "FBXASC0489FBXASC032FBXASC045FBXASC032Default2";
	rename -uid "1AD709D5-4DA5-6E8F-DFD9-99BF2379EA19";
	setAttr ".dc" 1;
	setAttr ".c" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".ambc" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 1;
	setAttr ".cp" 2;
createNode shadingEngine -n "R_longBladeSG";
	rename -uid "D09D4B83-4A0E-DC7B-3DBD-A0BB639D6B77";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo8";
	rename -uid "445CB52A-48D7-737E-F0CA-0B952486E34D";
createNode phong -n "MaterialFBXASC032FBXASC035754";
	rename -uid "CC23286F-45C0-E229-9126-A6AAECACC7EB";
	setAttr ".dc" 1;
	setAttr ".ambc" -type "float3" 0.588 0.588 0.588 ;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 1;
	setAttr ".cp" 2;
createNode shadingEngine -n "R_quiverSG";
	rename -uid "B6AB7E27-4AED-521E-E076-F5B314DE2A4D";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo9";
	rename -uid "8AE5CEF6-4DC3-3A7C-402D-F29EC0648F04";
createNode file -n "MapFBXASC032FBXASC035118";
	rename -uid "61632A6C-4FAC-6F83-3FC7-08AC827FF665";
	setAttr ".ftn" -type "string" "d:\\Workspace\\depot\\JX4_SourceData\\Graphics\\Item\\standard_weapon_model\\Texture\\wuqi_gong001_Ba.tga";
	setAttr ".cs" -type "string" "sRGB";
createNode place2dTexture -n "place2dTexture1";
	rename -uid "036BBEAD-47ED-8B54-9EA7-68B32DCEEB2C";
createNode phong -n "FBXASC0489FBXASC032FBXASC045FBXASC032Default";
	rename -uid "08A0C186-4233-AD63-CBE7-00A099CF001A";
	setAttr ".dc" 1;
	setAttr ".c" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".ambc" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 1;
	setAttr ".cp" 2;
createNode shadingEngine -n "R_swordShellSG";
	rename -uid "0C4EA9C9-4B71-5E2C-65EE-A69969F23D70";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo10";
	rename -uid "738CF82B-4597-921F-804B-E188A7419BC7";
createNode phong -n "FBXASC0489FBXASC032FBXASC045FBXASC032Default1";
	rename -uid "C783F2BF-4C20-0894-4A80-FF853B17066F";
	setAttr ".dc" 1;
	setAttr ".c" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".ambc" -type "float3" 0.59607846 0.5411765 0.40000004 ;
	setAttr ".sc" -type "float3" 0 0 0 ;
	setAttr ".rfl" 1;
	setAttr ".cp" 2;
createNode shadingEngine -n "R_bladeShellSG";
	rename -uid "E2DDE88C-407F-0DA9-C7C3-E79AA95F92F1";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode materialInfo -n "materialInfo11";
	rename -uid "5039DA3F-4BB7-031B-37F9-E0BCF13DA77F";
createNode script -n "theOrchestra";
	rename -uid "4538B0BC-41DA-1655-371B-8287BDDA8C2D";
	setAttr ".b" -type "string" (
		"import os\nimport maya.OpenMaya as om\n\nimport threading, time\nimport pymel.core as pm\nimport pymel.mayautils\n\nimport maya.cmds as py\nimport maya.mel as mel \nfrom copy import deepcopy\nfrom itertools import imap, chain\nfrom operator import sub\nimport getpass\nfrom math import *\n#GLOBAL VARIABLES\nglobal previousSelection;\nglobal previousNameSpace;\nglobal sceneOpenScriptJob\nglobal selectionScriptJob\nglobal weaponSpaceScriptJob\nglobal previouslyKeyedAll\n\n\n\npreviousSelection = [[],[]];\npreviousNameSpace = [[],[]];\npreviouslyKeyedAll = False;\nglobal currentHotKeySet;\ncurrentHotKeySet = py.hotkeySet(cu=1, q=1);\nmel.eval('source \"buildSetAnimLayerMenu.mel\"');\n#CAMERA CHECK\nif(py.objExists(\"perspShape\") == 1):\n    py.setAttr(\"perspShape.nearClipPlane\", 5);\nif(py.objExists(\"side\") == 1):#X\n    py.setAttr(\"side.tx\", 1000);\n    py.setAttr(\"sideShape.nearClipPlane\", 5);\nif(py.objExists(\"top\") == 1):#Y\n    py.setAttr(\"top.ty\", 1000);\n    py.setAttr(\"topShape.nearClipPlane\", 5);\nif(py.objExists(\"front\") == 1):#Z\n    py.setAttr(\"front.tz\", 1000);\n"
		+ "    py.setAttr(\"frontShape.nearClipPlane\", 5);\npreviousCamera = py.lookThru(q=1) if(\"c_M_character_v1_CAM\" not in py.lookThru(q=1)) else \"persp\";\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   CHECK FOR CLICKS AND SELECT PSEUDO HIERARCHY ON DOUBLE CLICK              #\n#.............................................................................#\n#.............................................................................#\n############################################################################### \ndef ifClick(*args):\n    pose('selectHierarchy');\n    #print \"double click\"\n\n        \ndef afterClick():\n    time.sleep(0.3);\n    if(py.popupMenu(\"checkClick\",exists=1) == 1):\n        pymel.mayautils.executeDeferred(\"py.deleteUI('checkClick');\");\n        #print \"gone\"\n        \n###############################################################################\n"
		+ "#.............................................................................#\n#.............................................................................#\n#   CHECK IF ASSET HAS THE \"RiGGiE\" IDENTIFIER                                #\n#.............................................................................#\n#.............................................................................#\n############################################################################### \ndef instrumentCheck():\n    rigNameSpaces = [];\n    rigControllers = [];\n    selections = py.ls(sl=1);\n###############################################################################\n# DETERMINES THE VALIDITY OF THE PREVIOUSLY SELECTED                          #\n############################################################################### \n    i=0;\n    while(i < len(selections)):\n        RiGGiE = py.listAttr(selections[i], st=[\"RiGGiE\"], r=1);\n        if(isinstance(RiGGiE, list) == True):\n            nameSpace = \"\";\n            breakdown = selections[i].split(\":\") if(\":\" in selections[i]) else [];\n"
		+ "            ii=0;\n            while(ii < len(breakdown)-1):\n                nameSpace = nameSpace+breakdown[ii]+\":\";\n                ii+=1;\n            rigControllers.append(selections[i]);\n            rigNameSpaces.append(nameSpace); \n        i+=1;\n    return [rigNameSpaces,rigControllers];\n        \n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   CHECK IF ASSET HAS THE \"RiGGiE\" IDENTIFIER                                #\n#.............................................................................#\n#.............................................................................#\n############################################################################### \ndef identityCheck():\n    rigNameSpaces = [];\n    rigControllers = [];\n    selections = py.ls(sl=1);\n###############################################################################\n"
		+ "# DETERMINES THE VALIDITY OF THE PREVIOUSLY SELECTED                          #\n############################################################################### \n    i=0;\n    while(i < len(selections)):\n        RiGGiE = py.listAttr(selections[i], st=[\"RiGGiE\"], r=1);\n        if(isinstance(RiGGiE, list) == True):\n            nameSpace = \"\";\n            breakdown = selections[i].split(\":\") if(\":\" in selections[i]) else [];\n            ii=0;\n            while(ii < len(breakdown)-1):\n                nameSpace = nameSpace+breakdown[ii]+\":\";\n                ii+=1;\n            rigControllers.append(selections[i]);\n            rigNameSpaces.append(nameSpace); \n        i+=1;\n    return [rigNameSpaces,rigControllers];\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   CREATES AND SHIFTS KEYS ON THE CONTROLLERS RELATED TO THE LIMB/SECTION    #\n"
		+ "#.............................................................................#\n#.............................................................................#\n############################################################################### \ndef piano(keys):\n    global previousSelection;\n    global previousNameSpace;\n    global selectionScriptJob\n    global timelinesScriptJob\n    global previouslyKeyedAll\n    axis = [\"X\",\"Y\",\"Z\"];\n    skipSelection = False;\n    selections = py.ls(sl=1);\n    allAttributes = [\"rotateX\",\"rotateY\",\"rotateZ\",\n                     \"translateX\",\"translateY\",\"translateZ\",\n                     \"MODE\",\"SPACE\",\"ROLL\",\"BANK\",\"HEEL\",\"TOE\",\"TOEFLOP\",\n                     \"TOEROLL\",\"HEELROLL\",\"NECK_SPACE\",\"HEAD_SPACE\"];     \n    forbiddenAttributes = [\"LOCK\"]; \n    forbiddenTypes = [\"master\", \"pivot\", \"trajectory\",\n                      \"pinky\", \"ring\", \"middle\", \"index\", \"thumb\"]; \n    invalidShapeAttributes = [\"lockLength\"];\n    armElements = [\"clavicle\",\"shoulder\",\"elbow\",\"wrist\",\"armPV\",\"arm\",\"armOptionsBox\"];\n"
		+ "    legElements = [\"hip\",\"knee\",\"ankle\",\"ball\",\"toe\",\"legPV\",\"leg\",\"legOptionsBox\"];\n    headElements= [\"neck\",\"head\",\"headOptionsBox\"];\n    spineElements=[\"spineMaster\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\"];  \n    #KILL SELECTION CHANGE SCRIPTJOB WHILE TIMELINE SCRIPTJOB (WHITE) IS ACTIVE\n    if(keys == \"white\"):\n        py.scriptJob(k=selectionScriptJob,f=1);\n###############################################################################\n# DETERMINES THE VALIDITY OF THE CURRENTLY SELECTED                           #\n############################################################################### \n    rigControllers = identityCheck()[-1];\n    rigNameSpaces = identityCheck()[0];\n    invalidRigControllers = [];\n    #GENERATATE A LIST OF INVALID CONTROLLERS FROM \"RIG CONTROLLERS\" LIST IF THEIR TYPE IS LISTED IN \"FORBIDDEN TYPES\"\n    if(rigControllers != []):\n        i=0;\n        while(i < len(rigControllers)):\n            controlName = rigControllers[i].replace(rigNameSpaces[i],\"\") if(rigNameSpaces[i] != \"\") else rigControllers[i];\n"
		+ "            variable = controlName.split(\"_\")[2];\n            type = \"\".join([x for x in variable if not x.isdigit()]);\n            if any(type in s for s in forbiddenTypes):\n                invalidRigControllers.append(rigControllers[i]);\n            i+=1;\n    #REMOVE CONTROLLERS FROM \"INVALID RIG CONTROLLERS\" FROM \"RIG CONTROLLERS\" LIST\n    if(invalidRigControllers != []):\n        i=0;\n        while(i < len(invalidRigControllers)):\n            if(invalidRigControllers[i] in rigControllers):\n                index = rigControllers.index(invalidRigControllers[i]);\n                rigControllers.remove(rigControllers[index]);\n                rigNameSpaces.remove(rigNameSpaces[index]);\n            i+=1;\n    #KILL OR REVIVE THE TIMELINE SCRIPT JOB BASED ON VALIDITY OF SELECTION\n    if(rigControllers != []):\n        scriptJobs = py.scriptJob(listJobs=1);\n        if not any(\"piano('white')\" in s for s in scriptJobs):\n            timelinesScriptJob = py.scriptJob(e=[\"timeChanged\", \"piano('white')\"], kws=1, cu=1);\n    else:\n"
		+ "        scriptJobs = py.scriptJob(listJobs=1);\n        if any(\"piano('white')\" in s for s in scriptJobs):\n            scriptToKill = [s for s in scriptJobs if \"piano('white')\" in s];\n            scriptToKill = int(scriptToKill[0].split(\":\")[0]);\n            timelinesScriptJob = py.scriptJob(k=scriptToKill, f=1);\n    selectedRange = mel.eval(\"global string $gPlayBackSlider;float $rangeArray[2];$rangeArray = `timeControl -q -rangeArray $gPlayBackSlider`;\");\n    if(keys == \"black\" or keys == \"white\" and selectedRange[0]+1 == selectedRange[-1]):\n###############################################################################\n# CHECK FOR DOUBLE CLICK                                                      #\n###############################################################################\n        #if(py.popupMenu(\"checkClick\",exists=1) == 0):\n        #    #py.evalDeferred(\"py.popupMenu('checkClick',parent='viewPanes',pmc=ifClick,pmo=1,b=1);\");\n        #    py.popupMenu('checkClick', parent='viewPanes', pmc=ifClick, b=1);\n"
		+ "        #    theThread = threading.Thread(target=afterClick);\n        #    theThread.start();\n###############################################################################\n# FILTER/REMOVE ADITIONAL SELECTIONS OF THE SAME LIMB FOR PREVIOUSLY SELECTED #\n###############################################################################\n        previousNameSpace = previousSelection[0];\n        previousSelection = previousSelection[-1];\n        #if(previousSelection == [] and rigControllers != []):\n        #    #IF NOTHING PREVIOUSLY SELECTED, USE CURRENT RIG CONTROLLER\n        #    previousSelection = rigControllers;\n        #    previousNameSpace = rigNameSpaces;\n        if(previousSelection != []):\n            skipSelection = True if(previousSelection == rigControllers) else False;\n            limbTypeList = [];\n            fullNameLimbControllers = [];\n            i=0;\n            while(i < len(previousSelection)):\n                limbControllers = [];\n                #DETERMINE LIMB TYPE\n                previousControlName = previousSelection[i].replace(previousNameSpace[i],\"\") if(previousNameSpace[i] != \"\") else previousSelection[i];   \n"
		+ "                elements = previousControlName.split(\"_\");\n                if(len(elements) > 2):\n                    if(elements[2] in armElements):\n                        allElements = armElements[:];\n                        limbType = \"ARM\";\n                    if(elements[2] in legElements):\n                        allElements = legElements[:];\n                        limbType = \"LEG\";\n                    if(elements[2] in headElements):\n                        allElements = headElements[:];\n                        limbType = \"HEAD\";\n                    if(elements[2] in spineElements):\n                        allElements = spineElements[:];\n                        limbType = \"SPINE\";\n                    if(elements[2] in allElements):\n                        allElements.remove(elements[2]);\n                    limbControllers.append(previousNameSpace[i]+previousControlName);\n                    #GENERATE LIST OF CONTROLLERS TO BE REMOVED IF THEY ARE ALREADY IN PREVIOUSLY SELECTED\n                    controllersInPrevious = [];\n"
		+ "                    ii=0;\n                    while(ii < len(allElements)): \n                        name = previousNameSpace[i]+previousControlName.replace(elements[2],allElements[ii]);\n                        if any(name in x for x in previousSelection):\n                            controllersInPrevious.append(name);\n                        limbControllers.append(name);\n                        ii+=1;    \n                    #REMOVE ITEMS FROM PREVIOUSLY SELECTED BASED ON \"CONTROLLERS IN PREVIOUS\" LIST    \n                    ii=0;\n                    while(ii < len(controllersInPrevious)): \n                        if(controllersInPrevious[ii] in previousSelection):\n                            index = previousSelection.index(controllersInPrevious[ii]);\n                            previousSelection.remove(previousSelection[index]);\n                            previousNameSpace.remove(previousNameSpace[index]);\n                        ii+=1;\n                    #GENERATE A LIST OF ALL TARGET CONTROLLERS\n                    fullNameLimbControllers.append(limbControllers); \n"
		+ "                    limbTypeList.append(limbType);\n                i+=1;\n            baseController = previousSelection[0].replace(previousNameSpace[0],\"\") if(previousNameSpace[0] != \"\") else previousSelection[0]; \n            nodes = previousSelection[:];\n            previousSelection = [[],[]];\n            masterVersion = baseController.replace(baseController.split(\"_\")[2],\"master\");\n            masterController = previousNameSpace[0]+masterVersion.replace(\"_L_\",\"_M_\").replace(\"_R_\",\"_M_\");\n###############################################################################\n# IF \"KEY ALL\" IS ON, START PROCESS: GET ANIMATION LAYERS OF ALL CONTROLLERS  #\n############################################################################### \n            if(py.getAttr(masterController+\".KEYALL\") == 1 and len(nodes) > 0):\n                previouslyKeyedAll = True;\n                i=0;\n                while(i < len(nodes)):\n                    targetControllers = deepcopy(fullNameLimbControllers[:]);\n                    targetControllers = targetControllers[i];\n"
		+ "                    targetControllers.remove(nodes[i]);\n                    potentialLimbControllers = [nodes[i]]+targetControllers;\n                    limbControllers = [nodes[i]];\n                    allAnimationLayers = [];\n                    ii=0;\n                    while(ii < len(limbControllers)):\n                        animationLayers = py.listConnections(limbControllers[ii],type=\"animLayer\");\n                        if(isinstance(animationLayers,list) == 1):\n                            filteredAnimationLayers = list(set(animationLayers));\n                            allAnimationLayers = allAnimationLayers+filteredAnimationLayers;\n                        ii+=1;\n                    #OPTIMIZE: CHECK SHAPE CONTROLLER CONNECTIONS TO DETERMINE IF LOOPING THROUGH ALL LIMB PARTS IS NECESSARY \n                    checkKeyableAttributes = py.listAttr(nodes[i]+\"Shape\",ud=1,k=1);\n                    ii=0;\n                    while(ii < len(checkKeyableAttributes)):\n                        hasChildren = py.attributeQuery(checkKeyableAttributes[ii],node=nodes[i]+\"Shape\",lc=1);\n"
		+ "                        if(isinstance(hasChildren,list) == 0):\n                            hasAnimationLayers = False;\n                            hasSource = py.connectionInfo(nodes[i]+\"Shape.\"+checkKeyableAttributes[ii],sfd=1);\n                            if(len(hasSource) > 0):\n                                if(\"unitConversion\" in py.nodeType(hasSource.split(\".\")[0])):\n                                    unitConversionPlugs = py.listConnections(hasSource.split(\".\")[0],p=1,s=1,sh=0);\n                                    if any(\".output\" in s for s in unitConversionPlugs):\n                                        hasSource = [s for s in unitConversionPlugs if \".output\" in s][0];\n                                    else:\n                                        hasSource = unitConversionPlugs[0];\n                                    hasAnimationLayers = True;\n                                elif(\"animBlend\" in py.nodeType(hasSource.split(\".\")[0])):\n                                    hasAnimationLayers = True;\n                            if(len(hasSource) == 0):\n"
		+ "                                #IF SHAPE HAS NO CONNECTIONS\n                                limbControllers = potentialLimbControllers[:];\n                                break;\n                            elif(isinstance(animationLayers,list) == 1 and hasAnimationLayers == False):\n                                #IF THE CONTROLLER IS CONNECTED BY LAYERS BUT THE SHAPE IS NOT\n                                limbControllers = potentialLimbControllers[:];\n                                break;\n                            elif(isinstance(animationLayers,list) == 0 and hasAnimationLayers == True):\n                                #IF THE CONTROLLER IS CONNECTED BY KEYS BUT THE SHAPE IS NOT\n                                limbControllers = potentialLimbControllers[:];\n                                break;\n                        ii+=1;\n                    #print limbControllers\n                    #OPTIMIZE (END): >>>\n                    selectedAnimationLayer = \"none\";\n                    if(allAnimationLayers != []):\n"
		+ "                        allAnimationLayers = list(set(allAnimationLayers));\n                        allAnimationLayers.insert(0,\"BaseAnimation\");\n###############################################################################\n# IF LAYERS FOUND, ADD ALL LIMB CONTROLLERS TO ALL LAYERS SO THEY ALL SHARE   #\n###############################################################################\n                        if(skipSelection == False):\n                            py.select(potentialLimbControllers[:],r=1);\n                            ii=0;\n                            while(ii < len(allAnimationLayers)):\n                                py.animLayer(allAnimationLayers[ii],aso=1,e=1);\n                                if(py.animLayer(allAnimationLayers[ii],sel=1,q=1) == 1):\n                                    selectedAnimationLayer = allAnimationLayers[ii];\n                                ii+=1;\n                        else:\n                            ii=0;\n                            while(ii < len(allAnimationLayers)):\n"
		+ "                                py.animLayer(allAnimationLayers[ii],aso=1,e=1);\n                                if(py.animLayer(allAnimationLayers[ii],sel=1,q=1) == 1):\n                                    selectedAnimationLayer = allAnimationLayers[ii];\n                                ii+=1;\n                        if(selectedAnimationLayer == \"none\"):\n                            selectedAnimationLayer = allAnimationLayers[-1];\n###############################################################################\n# GET THE PLUG CONNECTED TO KEYABLE ATTRIBUTES FROM THE CURRENT NODE          #\n###############################################################################\n                    ii=0;\n                    while(ii < len(limbControllers)):\n                        targetControllers = deepcopy(fullNameLimbControllers[:]);\n                        targetControllers = targetControllers[i];\n                        targetControllers.remove(limbControllers[ii]);\n                        keyableAttributes = py.listAttr(limbControllers[ii],st=allAttributes,k=1);\n"
		+ "###############################################################################\n# IF SOURCE PLUG IS AN ANIMATION LAYER, CONNECT TARGET'S OUTPUT TO LAYER DAG  #\n###############################################################################\n                        controllerDagTarget = [];\n                        keyableAttributes = py.listAttr(limbControllers[ii],st=allAttributes,k=1);\n                        iii=0;\n                        while(iii < len(keyableAttributes)):\n                            attributeDagTarget = py.connectionInfo(limbControllers[ii]+\".\"+keyableAttributes[iii],dfs=1);\n                            controllerDagTarget = controllerDagTarget+attributeDagTarget;\n                            iii+=1;\n                        controllerDagTarget = [s for s in controllerDagTarget if \"dagSetMembers\" in s];\n                        if(len(controllerDagTarget) > 0):\n                            controllerDagTarget = list(set(controllerDagTarget));    \n                            targetLayers = [s.split(\".\", 1)[0] for s in controllerDagTarget];\n"
		+ "                            targetLayers = list(set(targetLayers)); \n                            shapeNode = limbControllers[ii]+\"Shape\";\n                            checkableShapeAttributes = py.listAttr(shapeNode,ud=1,k=1);\n                            iii=0;\n                            while(iii < len(checkableShapeAttributes)):\n                                #FIRST DISCONNECT DAG CONNECTIONS IF NOT IN THE \"CONTROLLER DAG TARGET\" LIST\n                                shapeDagTarget = py.connectionInfo(shapeNode+\".\"+checkableShapeAttributes[iii],dfs=1);\n                                if(len(shapeDagTarget) > 0):\n                                    iiii=0;\n                                    while(iiii < len(shapeDagTarget)):\n                                        if(shapeDagTarget[iiii].split(\".\")[0] not in targetLayers):\n                                            py.disconnectAttr(shapeNode+\".\"+checkableShapeAttributes[iii],shapeDagTarget[iiii]);\n                                        iiii+=1;\n                                #THEN CONNECT ATTRIBUTE TO DAG NODES THAT ARE IN THE \"CONTROLLER DAG TARGET\" LIST\n"
		+ "                                iiii=0;\n                                while(iiii < len(targetLayers)):\n                                    hasDagSetMembers = py.listAttr(targetLayers[iiii],st=\"dagSetMembers\",m=1);\n                                    if(isinstance(hasDagSetMembers,list) == 1):\n                                        hasDagSetMembers = [x.replace('dagSetMembers[', '') for x in hasDagSetMembers];\n                                        hasDagSetMembers = [x.replace(']', '') for x in hasDagSetMembers];\n                                        hasDagSetMembers = map(int, hasDagSetMembers);\n                                        gapNumbers = list(chain.from_iterable((hasDagSetMembers[iiiii] + d for d in xrange(1, diff))\n                                        for iiiii, diff in enumerate(imap(sub, hasDagSetMembers[1:], hasDagSetMembers))if diff > 1));\n                                        if(len(gapNumbers) > 0):\n                                            py.connectAttr(shapeNode+\".\"+checkableShapeAttributes[iii],targetLayers[iiii]+\".dagSetMembers[\"+str(gapNumbers[0])+\"]\");\n"
		+ "                                        else:\n                                            py.connectAttr(shapeNode+\".\"+checkableShapeAttributes[iii],targetLayers[iiii]+\".dagSetMembers[\"+str(hasDagSetMembers[-1]+1)+\"]\");\n                                    iiii+=1;\n                                iii+=1;\n###############################################################################\n# CONTINUED: GET THE PLUG CONNECTED TO KEYABLE ATTRIBUTE FROM THE CURRENT NODE#\n###############################################################################\n                        iii=0;\n                        while(iii < len(keyableAttributes)):\n                            plug = py.connectionInfo(limbControllers[ii]+\".\"+keyableAttributes[iii],sfd=1);\n                            if(len(plug) > 0):\n                                sourcePlug = plug;\n                                sourcePlugType = \"invalid\";\n                                sourcePlugType = py.nodeType(sourcePlug);\n                                #OPTIMIZE (START): CHECK IF PLUG IS CONNECTED TO THE LAST SHAPE TARGET (IF SO, SKIP PLUGGING THIS ATTRIBUTE)\n"
		+ "                                alreadyPlugged = False;\n                                #hasTarget = py.connectionInfo(sourcePlug,dfs=1);\n                                #if(len(hasTarget) > 0):\n                                #    checkTargetAttribute = limbControllers[ii].split(\"_\")[-3]+\"_\"+keyableAttributes[iii];\n                                #    shapeNode = targetControllers[-1]+\"Shape\";\n                                #    isConnected = py.listConnections(shapeNode+\".\"+checkTargetAttribute);\n                                #    if(isinstance(isConnected,list) == 1):\n                                #        currentPlug = py.connectionInfo(shapeNode+\".\"+checkTargetAttribute,sfd=1);\n                                #        if(currentPlug == sourcePlug):\n                                #            alreadyPlugged = True;\n                                #OPTIMIZE (END): >>>\n                            else:\n                                sourcePlugType = \"none\";\n###############################################################################\n"
		+ "# CHECK IF SOURCE PLUG IS AN ANIMATION LAYER                                  #\n###############################################################################\n                            if(\"animationLayer\" in sourcePlugType or \"animBlendNode\" in sourcePlugType):\n                                sourcePlugType = \"animationLayer\";\n                            elif(\"animCurve\" in sourcePlugType or \"animationCurve\" in sourcePlugType):\n                                sourcePlugType = \"animationCurve\";                           \n###############################################################################\n# KEY ALL ATTRIBUTES ON CURRENT LIMB CONTROLLER THAT IS NOT KEYED             #\n###############################################################################\n                            if(\"animationLayer\" in sourcePlugType or \"animBlendNode\" in sourcePlugType):\n                                #IF PLUG TYPE IS AN ANIMATION LAYER, KEY THE CURVE ATTACHED TO THE LAYER BASED ON KEYS ON THAT LAYER\n                                iiii=0;\n"
		+ "                                while(iiii <  len(allAnimationLayers)):\n                                    mel.eval('selectLayer(\"'+allAnimationLayers[iiii]+'\");');\n                                    totalKeyFrameOnController = py.keyframe(limbControllers[ii],q=1);\n                                    if(isinstance(totalKeyFrameOnController,list) == 0):\n                                        totalKeyFrameOnController = py.keyframe(limbControllers[ii]+\"Shape\",q=1);\n                                    if(isinstance(totalKeyFrameOnController,list) == 1):\n                                        totalKeyFrameOnController = list(set(totalKeyFrameOnController)); \n                                    else:\n                                        totalKeyFrameOnController = [];\n                                    iiiii=0;\n                                    while(iiiii < len(keyableAttributes) and totalKeyFrameOnController != []):\n                                        targetKeyFrames = py.keyframe(limbControllers[ii]+\".\"+keyableAttributes[iiiii],q=1);\n"
		+ "                                        targetKeyFrames = list(set(targetKeyFrames)) if(isinstance(targetKeyFrames,list) == 1) else [];\n                                        framesToKey = list(set(totalKeyFrameOnController)-set(targetKeyFrames));\n                                        iiiiii=0;\n                                        while(iiiiii < len(framesToKey)):\n                                            value = py.getAttr(limbControllers[ii]+\".\"+keyableAttributes[iiiii], t=framesToKey[iiiiii]);\n                                            py.setKeyframe(limbControllers[ii],t=framesToKey[iiiiii],at=keyableAttributes[iiiii],al=allAnimationLayers[iiii],v=value,rk=1,s=0);\n                                            iiiiii+=1;\n                                        iiiii+=1;\n                                    iiii+=1;\n                                mel.eval('selectLayer(\"'+selectedAnimationLayer+'\");');\n                            if(sourcePlugType == \"animationCurve\" or sourcePlugType == \"none\"):\n                                #IF PLUG TYPE IS A CURVE OR NON EXISTENT, KEY AT THE FRAMES OF THE PLUG OR THE SHAPE (RESPECTIVELY)\n"
		+ "                                if(sourcePlugType == \"animationCurve\"):\n                                    totalKeyFrameOnController = py.keyframe(limbControllers[ii],q=1);\n                                else:\n                                    totalKeyFrameOnController = py.keyframe(limbControllers[ii]+\"Shape\",q=1);\n                                if(isinstance(totalKeyFrameOnController,list) == 1):\n                                    totalKeyFrameOnController = list(set(totalKeyFrameOnController)); \n                                else:\n                                    totalKeyFrameOnController = [];\n                                iiii=0;\n                                while(iiii < len(keyableAttributes) and totalKeyFrameOnController != []):\n                                    targetKeyFrames = py.keyframe(limbControllers[ii]+\".\"+keyableAttributes[iiii],q=1);\n                                    targetKeyFrames = list(set(targetKeyFrames)) if(isinstance(targetKeyFrames,list) == 1) else [];\n                                    framesToKey = list(set(totalKeyFrameOnController)-set(targetKeyFrames));\n"
		+ "                                    iiiii=0;\n                                    while(iiiii < len(framesToKey)):\n                                        value = py.getAttr(limbControllers[ii]+\".\"+keyableAttributes[iiii], t=framesToKey[iiiii]);\n                                        py.setKeyframe(limbControllers[ii],t=framesToKey[iiiii],at=keyableAttributes[iiii],v=value,rk=1,s=0);\n                                        iiiii+=1;\n                                    if(iiii == 0):\n                                        sourcePlugType = \"animationCurve\";\n                                        sourcePlug = py.connectionInfo(limbControllers[ii]+\".\"+keyableAttributes[iii],sfd=1);\n                                    iiii+=1;  \n###############################################################################\n# CONNECT SOURCE PLUGS INTO SHAPE NODE'S ATTRIBUTES BASED ON NODE             #\n###############################################################################\n                            if(sourcePlugType != \"none\" and sourcePlugType != \"invalid\" and alreadyPlugged == False):\n"
		+ "                                targetAttribute = limbControllers[ii].split(\"_\")[-3]+\"_\"+keyableAttributes[iii];\n                                iiii=0;\n                                while(iiii < len(targetControllers)):\n                                    shapeNode = targetControllers[iiii]+\"Shape\";\n                                    isConnected = py.connectionInfo(shapeNode+\".\"+targetAttribute,sfd=1);\n                                    if(len(isConnected) > 0):\n                                        currentPlug = py.connectionInfo(shapeNode+\".\"+targetAttribute,sfd=1);\n                                        directPlug = currentPlug;\n                                        if(\"unitConversion\" in py.nodeType(currentPlug.split(\".\")[0])):\n                                            unitConversionPlugs = py.listConnections(currentPlug.split(\".\")[0],p=1,s=1,sh=0);\n                                            directPlug = currentPlug;\n                                            if any(\".output\" in s for s in unitConversionPlugs):\n"
		+ "                                                currentPlug = [s for s in unitConversionPlugs if \".output\" in s][0];\n                                            else:\n                                                currentPlug = unitConversionPlugs[0];\n                                    if(len(isConnected) == 0):\n                                        #CONNECT SOURCE PLUG IF NOTHING IS CONNECTED\n                                        py.connectAttr(sourcePlug,shapeNode+\".\"+targetAttribute);\n                                    elif(len(isConnected) > 0 and currentPlug != sourcePlug):\n                                        #DISCONNECT CURRENT PLUG IF IT DOES NOT MATCH INCOMMING SOURCE PLUG\n                                        py.disconnectAttr(directPlug,shapeNode+\".\"+targetAttribute);\n                                        py.connectAttr(sourcePlug,shapeNode+\".\"+targetAttribute);\n###############################################################################\n# CHANGE COLOR OF THEY KEYS TO BLUE TO SHOW THE ANIMATOR \"KEY ALL\" IS ACTIVE  #\n"
		+ "###############################################################################\n                                    materialElements = nodes[i].split(\"_\");\n                                    material = previousNameSpace[i]+materialElements[-4].upper()+limbTypeList[i]+materialElements[-2][-1]+\"_MAT\";\n                                    if(py.objExists(material) == 0):\n                                        #SECOND GUESS: MATERIAL\n                                        material = previousNameSpace[i]+materialElements[-4].upper()+\"SPINE1\"+\"_MAT\";\n                                    if(sourcePlugType == \"animationLayer\" or sourcePlugType == \"character\"):\n                                        #PLUG MATERIAL COLOR INTO ANIMATION LAYER\n                                        if(py.objExists(material) == 1):\n                                            translationCurves = py.listConnections(sourcePlug.split(\".\")[0],type=\"animCurveTL\",s=1);\n                                            translationCurves = translationCurves if(isinstance(translationCurves,list) == 1) else [];\n"
		+ "                                            rotationCurves = py.listConnections(sourcePlug.split(\".\")[0],type=\"animCurveTA\",s=1);\n                                            rotationCurves = rotationCurves if(isinstance(rotationCurves,list) == 1) else [];\n                                            userCurves = py.listConnections(sourcePlug.split(\".\")[0],type=\"animCurveTU\",s=1);\n                                            userCurves = userCurves if(isinstance(userCurves,list) == 1) else [];\n                                            animationCurvesAttachedToLayer = translationCurves+rotationCurves+userCurves;\n                                            iiiii=0;\n                                            while(iiiii < len(animationCurvesAttachedToLayer)):\n                                                colorValues = list(py.getAttr(material+\".color\")[0]);\n                                                py.setAttr(animationCurvesAttachedToLayer[iiiii]+\".useCurveColor\",1);  \n                                                py.setAttr(animationCurvesAttachedToLayer[iiiii]+\".curveColor\",colorValues[0]/0.5,colorValues[1]/0.5,colorValues[2]/0.5); \n"
		+ "                                                iiiii+=1;\n                                    elif(sourcePlugType == \"animationCurve\"):\n                                        #PLUG MATERIAL COLOR INTO ANIMATION CURVE\n                                        if(py.objExists(material) == 1):\n                                            colorValues = list(py.getAttr(material+\".color\")[0]);\n                                            py.setAttr(sourcePlug.split(\".\")[0]+\".useCurveColor\",1);\n                                            py.setAttr(sourcePlug.split(\".\")[0]+\".curveColor\",colorValues[0]/0.5,colorValues[1]/0.5,colorValues[2]/0.5); \n                                    iiii+=1;\n                            iii+=1;\n                        ii+=1;\n                    i+=1;\n            elif(previouslyKeyedAll == True):#SHOULD ONLY BE ACTIVE THE FIRST TIME CLICKING AFTER KEY ALL IS OFF \n                #IF \"KEY ALL\" IS OFF, DISCONNECT ALL SOURCES AND TARGETS FROM ALL SHAPE NODE ATTRIBUTES\n                i=0;\n                while(i < len(nodes)):\n"
		+ "                    targetControllers = deepcopy(fullNameLimbControllers[:]);\n                    targetControllers = targetControllers[i];\n                    targetControllers.remove(nodes[i]);\n                    limbControllers = [nodes[i]]+targetControllers;\n                    ii=0;\n                    while(ii < len(limbControllers)):\n                        shapeNode = limbControllers[ii]+\"Shape\";\n                        keyableAttributes = py.listAttr(shapeNode,ud=1,k=1);\n                        iii=0;\n                        while(iii < len(keyableAttributes)):\n                            #IF CURRENT SHAPE ATTRIBUTE HAS A TARGET, DISCONNECT IT\n                            hasTarget = py.connectionInfo(shapeNode+\".\"+keyableAttributes[iii],dfs=1);\n                            if(len(hasTarget) > 0):\n                                py.disconnectAttr(shapeNode+\".\"+keyableAttributes[iii],hasTarget[0]);\n                            #IF CURRENT SHAPE ATTRIBUTE HAS A SOURCE PLUG, DISCONNECT IT\n                            hasSource = py.connectionInfo(shapeNode+\".\"+keyableAttributes[iii],sfd=1);\n"
		+ "                            if(len(hasSource) > 0):\n                                py.disconnectAttr(hasSource,shapeNode+\".\"+keyableAttributes[iii]);\n                            iii+=1;\n                        ii+=1;\n                    i+=1;\n                previouslyKeyedAll = False;\n###############################################################################\n#                                                                             #\n###############################################################################  \n    if(keys == \"black\" and skipSelection == False and previousSelection != []):\n        py.select(selections,r=1);\n    if(len(rigControllers) > 0):\n        previousSelection = [rigNameSpaces,rigControllers];\n    else:\n        previousSelection = [[],[]];\n    #ACTIVACTE SELECTION CHANGE SCRIPTJOB AFTER TIMELINE SCRIPTJOB COMPLETES\n    if(keys == \"white\"):\n        selectionScriptJob = py.scriptJob(e=[\"SelectionChanged\", \"piano('black')\"], kws=1, cu=1);\n###############################################################################\n"
		+ "#.............................................................................#\n#.............................................................................#\n#   MATCHES IKFK POSITIONS AND SWITCHES MODE                                  #\n#.............................................................................#\n#.............................................................................#\n###############################################################################  \ndef match():\n    global selectionScriptJob\n    selections = py.ls(sl=1);\n    armAssets = [\"clavicle\",\"shoulder\",\"elbow\",\"wrist\",\"armPV\",\"arm\",\n                 \"armOptionsBox\",\"pinky\", \"ring\", \"middle\", \"index\", \"thumb\"]; \n    legAssets = [\"hip\",\"knee\",\"ankle\",\"ball\",\"toe\",\"hock\",\"legPV\",\"leg\",\"legOptionsBox\"];\n    spineAssets=[\"spineMaster\",\"pelvis\",\"spine\"];\n    headAssets= [\"neck\", \"head\"];\n    allAssets = [\"master\",\"pivot\", \"trajectory\"];\n    allAttributes = [\"rotateX\",\"rotateY\",\"rotateZ\",\n                     \"translateX\",\"translateY\",\"translateZ\",\n"
		+ "                     \"ROLL\",\"BANK\",\"HEEL\",\"TOE\",\"TOEROLL\"];\n    rigControllers = identityCheck()[-1];\n    rigNameSpaces = identityCheck()[0];\n    py.scriptJob(k=selectionScriptJob);\n###############################################################################\n# FILTER/REMOVE ADITIONAL SELECTIONS OF THE SAME LIMB                         #\n###############################################################################\n    if(rigControllers != []):\n        i=0;\n        while(i < len(rigControllers)):\n            controlName = rigControllers[i].replace(rigNameSpaces[i],\"\") if(rigNameSpaces[i] != \"\") else rigControllers[i];\n            sections = armAssets+legAssets+spineAssets+headAssets+allAssets;\n            elements = controlName.split(\"_\");\n            cleanElement = ''.join([x for x in elements[2] if not x.isdigit()]);\n            sections.remove(cleanElement);\n            ii=0;\n            while(ii < len(sections)): \n                name = controlName.replace(elements[2],sections[ii]);\n                if any(rigNameSpaces[i]+name in x for x in rigControllers):\n"
		+ "                    rigControllers.remove(rigNameSpaces[i]+name);\n                ii+=1;            \n            i+=1;\n        nodes = rigControllers[:];   \n###############################################################################\n# DETRMINE MODE AND LIMB TYPE                                                 #\n###############################################################################\n        i=0;\n        while(i < len(nodes)):\n            section = \"\";\n            controlName = nodes[i].replace(rigNameSpaces[i],\"\") if(rigNameSpaces[i] != \"\") else nodes[i];\n            variable = controlName.split(\"_\")[2];\n            type = \"\".join([x for x in variable if not x.isdigit()]);\n            if any(type in x for x in armAssets):\n                section = \"arm\";\n                segments = armAssets[1:4];\n                box = \"armOptionsBox\";\n            if any(type in x for x in legAssets):\n                section = \"leg\";\n                segments = legAssets[0:4];\n                box = \"legOptionsBox\";\n            if(section == \"arm\" or section == \"leg\"):\n"
		+ "                elements = controlName.split(\"_\");\n                optionsBox = rigNameSpaces[i]+controlName.replace(elements[2], box);\n                mode = py.getAttr(optionsBox+\".MODE\");\n###############################################################################\n# MATCH IK TO FK POSITION THEN SWITCH TO IK MODE                              #\n###############################################################################\n                if(mode >= 0.5):\n                    ii=0;\n                    while(ii < len(segments)):\n                        target = controlName.replace(elements[2],segments[ii]);\n                        targetGroup = py.listRelatives(rigNameSpaces[i]+target,type=\"transform\",p=1,s=0);\n                        source = rigNameSpaces[i]+target.replace(segments[ii],segments[ii]+\"OffsetIK\").replace(\"CTRL\",\"LOC\");\n                        if(py.objExists(source) == 0):\n                            source = rigNameSpaces[i]+target.replace(\"CTRL\",\"JNT\");\n                        rotationOrder = py.xform(rigNameSpaces[i]+target, roo=1, q=1);\n"
		+ "                        locateControllerFK = py.spaceLocator(p=(0,0,0))[0];\n                        py.xform(locateControllerFK,p=1,roo=rotationOrder);\n                        snap = py.parentConstraint(rigNameSpaces[i]+target,locateControllerFK,mo=0,w=1);\n                        py.delete(snap);\n                        py.parent(locateControllerFK,targetGroup);\n                        snap = py.orientConstraint(source,locateControllerFK,mo=0,w=1);\n                        py.delete(snap);\n                        rotations = list(py.getAttr(locateControllerFK+\".r\")[0]);\n                        iii=0;\n                        while(iii < len(rotations)):\n                            rotations[iii] = round(rotations[iii],2);\n                            iii+=1;\n                        py.setAttr(rigNameSpaces[i]+target+\".r\",rotations[0],rotations[1],rotations[2]);\n                        py.delete(locateControllerFK);\n                        ii+=1;\n                    IK = nodes[i].replace(elements[2],segments[2]);\n"
		+ "                    index = selections.index(nodes[i]);\n                    selections.remove(nodes[i]);\n                    selections.insert(index,IK);\n                    py.setAttr(optionsBox+\".MODE\", 0); \n###############################################################################\n# MATCH FK TO IK POSITION THEN SWITCH TO FK MODE                              #\n###############################################################################\n                if(mode < 0.5):\n                    attributes = [\"ROLL\",\"BANK\",\"HEEL\",\"TOE\",\"TOEFLOP\",\n                                  \"HEELROLL\",\"TOEROLL\"];\n                    rollFK = controlName.replace(elements[2],segments[len(segments)-2]);#FK WRIST/ANKLE\n                    endFK = controlName.replace(elements[2],segments[-1]);#FK BALL\n                    target = controlName.replace(elements[2],section);#IK CONTROLLER\n                    targetEnd = target.replace(\"leg\",\"toe\");\n                    targetGroup = py.listRelatives(rigNameSpaces[i]+target,type=\"transform\",p=1,s=0);\n"
		+ "                    initialPositionIK = controlName.replace(elements[2],section+\"InitialPositionIK\").replace(\"CTRL\",\"LOC\");\n                    initialPositionFK = controlName.replace(elements[2],section+\"InitialPositionFK\").replace(\"CTRL\",\"LOC\");\n                    ii=0;\n                    while(ii < len(attributes) and section == \"leg\"):\n                        py.setAttr(rigNameSpaces[i]+target+\".\"+attributes[ii],0);\n                        ii+=1;\n                    #MATCH TRANSLATIONS\n                    locateFK = py.spaceLocator(p=(0,0,0))[0];\n                    rotationOrder = py.xform(rigNameSpaces[i]+target,roo=1,q=1);\n                    py.xform(locateFK, p=1, roo=rotationOrder);\n                    snap = py.pointConstraint(rigNameSpaces[i]+initialPositionIK,locateFK,mo=0,w=1);\n                    py.delete(snap);\n                    py.parent(locateFK,targetGroup);\n                    py.makeIdentity(locateFK, a=1, t=1, n=0);#FREEZE\n                    snap = py.pointConstraint(rigNameSpaces[i]+endFK,locateFK,mo=0,w=1);\n"
		+ "                    py.delete(snap);\n                    translation = list(py.getAttr(locateFK+\".t\")[0]);\n                    ii=0;\n                    while(ii < len(translation)):\n                        translation[ii] = round(translation[ii],2);\n                        ii+=1;\n                    py.setAttr(rigNameSpaces[i]+target+\".t\",translation[0],translation[1],translation[2]);\n                    #MATCH ROTATIONS\n                    inputControllers = [rigNameSpaces[i]+target,rigNameSpaces[i]+targetEnd];\n                    outputControllers = [rigNameSpaces[i]+initialPositionFK,rigNameSpaces[i]+endFK];\n                    aimArray = py.getAttr(rigNameSpaces[i]+initialPositionIK+\".aimAxis\", asString=1); \n                    aimArray = aimArray.split(\",\");\n                    aimArray = [int(aimArray[0]),int(aimArray[1]),int(aimArray[2])];\n                    upArray = py.getAttr(rigNameSpaces[i]+initialPositionIK+\".upAxis\", asString=1); \n                    upArray = upArray.split(\",\");\n                    upArray = [int(upArray[0]),int(upArray[1]),int(upArray[2])];\n"
		+ "                    ii=0;\n                    while(ii < len(outputControllers)):\n                        reverse = 1 if(rollFK.split(\"_\")[1] == \"L\") else -1;\n                        targetGroup = py.listRelatives(inputControllers[ii],type=\"transform\",p=1,s=0);\n                        snap = py.pointConstraint(outputControllers[ii],locateFK,mo=0,w=1);\n                        py.delete(snap);\n                        py.parent(locateFK,outputControllers[ii]);\n                        py.setAttr(locateFK+\".r\",0,0,0);\n                        py.makeIdentity(locateFK, a=1, t=1, n=0);#FREEZE\n                        if(section == \"leg\"):\n                            py.setAttr(locateFK+\".t\",0,0,1*reverse);\n                        else:\n                            py.setAttr(locateFK+\".t\",0,1*reverse,0);\n                        upAxis = py.duplicate(locateFK,ic=1,rc=1,rr=1)[0];\n                        py.setAttr(locateFK+\".t\",1*reverse,0,0);\n                        frontAxis = py.duplicate(locateFK,ic=1,rc=1,rr=1)[0];\n                        py.setAttr(locateFK+\".t\",0,0,0);\n"
		+ "                        py.parent(locateFK,targetGroup);\n                        objectUpArray = [0,0,1*reverse] if(section == \"leg\") else [0,1*reverse,0];\n                        snap = py.aimConstraint(frontAxis,locateFK,aim=aimArray,u=upArray,wut=\"objectrotation\",wuo=outputControllers[ii],wu=objectUpArray,mo=0,w=1);\n                        rotations = list(py.getAttr(locateFK+\".r\")[0]);\n                        iii=0;\n                        while(iii < len(rotations)):\n                            rotations[iii] = round(rotations[iii],2);\n                            iii+=1;\n                        py.setAttr(inputControllers[ii]+\".r\",rotations[0],rotations[1],rotations[2]);\n                        py.delete(upAxis,frontAxis,snap);\n                        ii+=1;\n                    py.delete(locateFK);\n###############################################################################\n# MATCH POLEVECTOR POSITION                                                   #\n###############################################################################\n"
		+ "                    jointChain = [];\n                    jointLengths = [];\n                    poleVector = rigNameSpaces[i]+target.replace(\"_v\",\"PV_v\");\n                    #poleVectorFK = poleVector.replace(\"CTRL\",\"LOC\").replace(\"PV_v\",\"TrackPV_v\");\n                    #poleVectorGroup = poleVector.replace(\"CTRL\",\"GRP\");\n                    ii=0;\n                    while(ii < len(segments)):\n                        #name = nodes[i].replace(elements[2],segments[ii]).replace(\"c_\",\"b_\").replace(\"CTRL\",\"JNT\");\n                        source = nodes[i].replace(elements[2],segments[ii]);\n                        joints = py.joint(p=(0,0,0));\n                        snap = py.pointConstraint(source,joints,mo=0,w=1);\n                        py.delete(snap);\n                        jointChain.append(joints);\n                        ii+=1;\n                    distanceNodeShape = py.distanceDimension(sp=(0, 100, 0), ep=(0, 10, 0));\n                    distanceLocators = py.listConnections(distanceNodeShape);\n                    distanceNode = py.listRelatives(distanceNodeShape, p=1);\n"
		+ "                    ii=0;\n                    while(ii < len(jointChain)-1):\n                        snap = py.pointConstraint(jointChain[ii],distanceLocators[0], mo=0, w=1);\n                        py.delete(snap);\n                        snap = py.pointConstraint(jointChain[ii+1],distanceLocators[1],mo=0,w=1);\n                        py.delete(snap);\n                        currentMeasurement = py.getAttr(distanceNodeShape+\".distance\");\n                        jointLengths.append(currentMeasurement);\n                        ii+=1;  \n                    py.delete(distanceNode,distanceLocators);\n\n                    startJoint = py.xform(jointChain[0], ws=1, t=1, q=1);\n                    midJoint = py.xform(jointChain[1], ws=1, t=1, q=1);\n                    endJoint = py.xform(jointChain[2], ws=1, t=1, q=1);\n                    startJointV = om.MVector(startJoint[0],startJoint[1],startJoint[2]);\n                    midJointV = om.MVector(midJoint[0] ,midJoint[1], midJoint[2]);\n                    endJointV = om.MVector(endJoint[0] ,endJoint[1], endJoint[2]);\n"
		+ "                    startToEndJoints = endJointV - startJointV;\n                    startJoint2midJoint = midJointV - startJointV;\n                    dot = startJoint2midJoint * startToEndJoints;\n                    point = float(dot)/float(startToEndJoints.length());\n                    startToEndJoints2 = startToEndJoints.normal();\n                    pointV = startToEndJoints2 * point;\n                    aimValue = startJoint2midJoint - pointV;\n                    aimValue *= (jointLengths[0])/10;\n                    finalPosition = midJointV+aimValue;\n                    #finalPosition = midJointV;\n                    \n                    locateControllerIK = py.spaceLocator(p=(0,0,0))[0];\n                    py.xform(locateControllerIK,ws=1,t=(finalPosition.x,finalPosition.y,finalPosition.z));  \n                    \n                    snap = py.pointConstraint(locateControllerIK,poleVector,mo=0,w=1);\n                    translation = list(py.getAttr(poleVector+\".t\")[0]);\n                    py.delete(snap);\n"
		+ "                    py.setAttr(poleVector+\".t\",translation[0],translation[1],translation[2]);\n                    \n                    py.delete(jointChain, locateControllerIK);\n                    \n                    FK = nodes[i].replace(elements[2],section);\n                    index = selections.index(nodes[i]);\n                    selections.remove(nodes[i]);\n                    selections.insert(index,FK);\n                    py.setAttr(optionsBox+\".MODE\", 1);\n                if(i == len(nodes)-1 and (mode == 0 or mode == 1)):\n                    py.select(selections,r=1);\n            i+=1;\n        py.select(selections,r=1);\n    selectionScriptJob = py.scriptJob(e=[\"SelectionChanged\", \"piano('black')\"], kws=1, cu=1);\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   PICKWALKS THE RIG CONTROLLERS                                             #\n"
		+ "#.............................................................................#\n#.............................................................................#\n###############################################################################  \ndef walk(directions):\n    rigControllers = [];\n    selections = py.ls(sl=1);\n    direction = \"UP\" if(directions == 0) else \"DOWN\";\n    rigControllers = identityCheck()[-1];\n    rigNameSpaces = identityCheck()[0];\n###############################################################################\n# CYCLES THROUGH VALID CONTROLLERS AND SETS TO T POSE                         #\n############################################################################### \n    if(rigControllers != []):\n        i=0;\n        while(i < len(rigControllers)):\n            pickAttributes = py.listAttr(rigControllers[i]+\"Shape\",k=0,l=1,ud=1);\n            if(isinstance(pickAttributes,list) == 1):\n                nextNodes = [x for x in pickAttributes if direction in x];\n                index = selections.index(rigControllers[i]);\n"
		+ "                selections.remove(rigControllers[i]);\n                ii=0;\n                while(ii < len(nextNodes)):\n                    nameSpace = \"\";\n                    if(\":\" in rigControllers[i]):\n                        name = rigControllers[i].split(\":\")[-1];\n                        nameSpace = rigControllers[i][0:(len(rigControllers[i])-len(name))];\n                    item = nameSpace+nextNodes[ii].split(direction)[-1];\n                    selections.insert(index,item);\n                    ii+=1;\n            i+=1;\n        py.select(selections,r=1);\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   SETS THE SELECTIONS TO TPOSE                                              #\n#.............................................................................#\n#.............................................................................#\n"
		+ "###############################################################################  \ndef pose(action):\n    rigControllers = [];\n    selections = py.ls(sl=1);\n    #TPOSE ATTRIBUTES\n    armAssets = [\"clavicle\",\"shoulder\",\"elbow\",\"wrist\",\"armPV\",\"arm\"]; \n    fingerAssets=[\"armOptionsBox\", \"pinky\", \"ring\", \"middle\", \"index\", \"thumb\"]; \n    legAssets = [\"hip\",\"knee\",\"ankle\",\"ball\",\"toe\",\"legPV\",\"leg\",\"legOptionsBox\"];\n    toeAssets = []; \n    spineAssets=[\"spineMaster\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\"];\n    headAssets= [\"neck\", \"head\"];\n    allAssets = [\"master\",\"pivot\", \"trajectory\"];\n    allAttributes = [\"rotateX\",\"rotateY\",\"rotateZ\",\n                     \"translateX\",\"translateY\",\"translateZ\",\n                     \"ROLL\",\"BANK\",\"HEEL\",\"TOE\",\"TOEROLL\"];\n    #TPOSE ATTRIBUTES\n    armFK = [\"clavicle\",\"shoulder\",\"elbow\",\"wrist\"];\n    armIK = [\"armPV\",\"armOptionsBox\",\"arm\"];\n    \n    legFK = [\"hip\",\"knee\",\"ankle\",\"ball\"];\n    legIK = [\"legPV\",\"legOptionsBox\",\"leg\",\"toe\"];\n    \n    rigControllers = identityCheck()[-1];\n"
		+ "    rigNameSpaces = identityCheck()[0];\n###############################################################################\n# FILTER/REMOVE ADITIONAL SELECTIONS OF THE SAME LIMB                         #\n###############################################################################\n    if(rigControllers != []):\n        i=0;\n        while(i < len(rigControllers)):\n            controlName = rigControllers[i].replace(rigNameSpaces[i],\"\") if(rigNameSpaces[i] != \"\") else rigControllers[i];\n            sections = armAssets+fingerAssets+legAssets+toeAssets+spineAssets+headAssets+allAssets;\n            elements = controlName.split(\"_\");\n            if(\"spine\" not in elements[2]):\n                cleanElement = ''.join([x for x in elements[2] if not x.isdigit()]);#REMOVE INT\n            else:\n                cleanElement = elements[2];\n            sections.remove(cleanElement);\n            ii=0;\n            while(ii < len(sections)): \n                name = controlName.replace(elements[2],sections[ii]);\n                if any(rigNameSpaces[i]+name in x for x in rigControllers):\n"
		+ "                    rigControllers.remove(rigNameSpaces[i]+name);\n                ii+=1;            \n            i+=1;\n        nodes = rigControllers[:];\n        baseController = rigControllers[0].replace(rigNameSpaces[0],\"\") if(rigNameSpaces[0] != \"\") else rigControllers[0]; \n        masterVersion = baseController.replace(baseController.split(\"_\")[2],\"master\");\n        masterController = rigNameSpaces[0]+masterVersion.replace(\"_L_\",\"_M_\").replace(\"_R_\",\"_M_\");\n###############################################################################\n# SCROLL THROUGH NODES AND ZERO OUT ATTRIBUTES                                #\n###############################################################################\n        i=0;\n        while(i < len(nodes)):\n            relatedAssets = [];\n            digitAssets = fingerAssets+toeAssets;\n            controlName = nodes[i].replace(rigNameSpaces[i],\"\") if(rigNameSpaces[i] != \"\") else nodes[i];\n            variable = controlName.split(\"_\")[2];\n            type = \"\".join([x for x in variable if not x.isdigit()]);#REMOVE INT\n"
		+ "            if(type in armAssets):\n                section = \"arm\";\n                relatedAssets = armAssets;\n            elif(type in fingerAssets):\n                section = \"armMisc\";\n                relatedAssets = armAssets;\n            if(type in legAssets):\n                section = \"leg\";\n                relatedAssets = legAssets;\n            elif(type in toeAssets):\n                section = \"legMisc\";\n                relatedAssets = legAssets;\n            if(type in spineAssets):\n                section = \"spine\";\n                relatedAssets = spineAssets;\n            if(type in headAssets):\n                section = \"cranium\";\n                relatedAssets = headAssets;\n            if(type in allAssets):\n                section = \"character\";\n                relatedAssets = allAssets; \n            if(action != 'tpose'):\n                #IF DOUBLE CLICKED\n                if(\"Misc\" in section):\n                    section = section.replace(\"Misc\",\"\");\n                    master = rigNameSpaces[i]+controlName.replace(controlName.split(\"_\")[2],type).replace(\"CTRL\",\"GRP\");\n"
		+ "                else:\n                    master = rigNameSpaces[i]+controlName.replace(controlName.split(\"_\")[2],section).replace(\"CTRL\",\"GRP\");\n            else:\n                master = rigNameSpaces[i]+controlName.replace(controlName.split(\"_\")[2],section).replace(\"CTRL\",\"GRP\");\n            #GET CHILDREN NODES OF THE SELECTED CONTROLLER\n            allChildren = py.listRelatives(master,type=\"transform\",ad=1,s=0);\n            childControllers = [s for s in allChildren if \"CTRL\" in s];\n            if(len(childControllers) > 0 and section == \"armMisc\"):\n                #IF FINGER CONTROLLER, ADD OPTIONS BOX CONTROLLER TO LIST\n                optionsBox = rigNameSpaces[i]+controlName.replace(controlName.split(\"_\")[2],\"armOptionsBox\");\n                childControllers.append(optionsBox);\n            ii=0;\n            while(ii < len(childControllers)):\n                if any(x in childControllers[ii] for x in digitAssets):\n                    #IF DIGIT (FINGER/TOE) ASSET IS FOUND IN CURRENT CHILD CONTROLLER\n                    if(action == 'tpose'):\n"
		+ "                        if(\"Misc\" in section or section == \"character\"):\n                            keyableAttributes = py.listAttr(childControllers[ii],st=allAttributes,k=1);\n                            if(isinstance(keyableAttributes,list) == 1):\n                                iii=0;\n                                while(iii < len(keyableAttributes)):\n                                    py.setAttr(childControllers[ii]+\".\"+keyableAttributes[iii],0);\n                                    iii+=1;\n                    else:\n                        #IF A FINGER ASSET AND DOUBLE CLICK IS USED\n                        childType = childControllers[ii].split(\"_\")[-3];\n                        mainIndex = variable[-1];\n                        index = childType[-1];\n                        if(type in digitAssets):\n                            try:\n                                if(int(index) > int(mainIndex)):\n                                    py.select(childControllers[ii],add=1);\n                            except:\n                                pass;\n"
		+ "                        else:\n                            py.select(childControllers[ii],add=1);\n                elif(\"Misc\" not in section):\n                    #IF NODE IS NOT A DIGIT (FINGER/TOE) ASSET\n                    if(action == 'tpose'):\n                        keyableAttributes = py.listAttr(childControllers[ii],st=allAttributes,k=1);\n                        if(isinstance(keyableAttributes,list) == 1):\n                            iii=0;\n                            while(iii < len(keyableAttributes)):\n                                py.setAttr(childControllers[ii]+\".\"+keyableAttributes[iii],0);\n                                iii+=1;\n                    else:\n                        #IF DOUBLE CLICK IS USED INSTEAD OF \"T\" HOTKEY\n                        childType = childControllers[ii].split(\"_\")[-3];\n                        hierarchyChain = [];\n                        if(section == \"arm\"):\n                            mode = py.getAttr(childControllers[ii].replace(childType,\"armOptionsBox\")+\".MODE\");\n"
		+ "                            hierarchyChain = armFK if(mode <= 0.5) else armIK;\n                        elif(section == \"leg\"):\n                            mode = py.getAttr(childControllers[ii].replace(childType,\"legOptionsBox\")+\".MODE\");\n                            hierarchyChain = legFK if(mode <= 0.5) else legIK;\n                        elif(section == \"spine\"):\n                            hierarchyChain = spineAssets;\n                        elif(section == \"cranium\"):\n                            hierarchyChain = headAssets;\n                        if(childType in hierarchyChain):\n                            initialSelectionType = nodes[i].split(\"_\")[-3]\n                            initialIndex = hierarchyChain.index(initialSelectionType);\n                            index = hierarchyChain.index(childType);\n                            if(index > initialIndex):\n                                py.select(childControllers[ii],add=1);\n                        elif(section == \"character\"):   \n                            py.select(childControllers[ii],add=1);    \n"
		+ "                ii+=1;\n            if(action != \"tpose\"):\n                break;\n            i+=1;\n        if(action == \"tpose\"):    \n            py.headsUpMessage('\"Successfully set to T pose!\" - HiGGiE', t=1);\n        #else:\n        #    py.headsUpMessage('\"Successfully set to T pose!\" - HiGGiE', t=1);\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   MIRROR POSE OF SELECTED TO OPPOSITE SIDE                                  #\n#.............................................................................#\n#.............................................................................#\n###############################################################################  \ndef mirror():\n    rigControllers = [];\n    selections = py.ls(sl=1);\n    rigControllers = instrumentCheck()[-1];\n    rigNameSpaces = instrumentCheck()[0];\n###############################################################################\n"
		+ "# FILTER/REMOVE ADITIONAL SELECTIONS OF THE SAME LIMB                         #\n###############################################################################\n    if(rigControllers != []):\n        i=0;\n        while(i < len(rigControllers)):\n            \n            \n            nameSpaceListTemp = [rigNameSpaces[i],rigNameSpaces[i],rigNameSpaces[i],\n                                 rigNameSpaces[i],rigNameSpaces[i],rigNameSpaces[i],\n                                 rigNameSpaces[i],rigNameSpaces[i],rigNameSpaces[i],\n                                 rigNameSpaces[i],rigNameSpaces[i],rigNameSpaces[i],\n                                 rigNameSpaces[i],rigNameSpaces[i],rigNameSpaces[i]];\n            if(\"c_L_wrist_v1_CTRL\" in rigControllers[i]):\n                fingerNodeList = [\"c_L_thumb1_v1_CTRL\",\"c_L_thumb2_v1_CTRL\",\"c_L_thumb3_v1_CTRL\",\n                                 \"c_L_index1_v1_CTRL\",\"c_L_index2_v1_CTRL\",\"c_L_index3_v1_CTRL\",\n                                 \"c_L_middle1_v1_CTRL\",\"c_L_middle2_v1_CTRL\",\"c_L_middle3_v1_CTRL\",\n"
		+ "                                 \"c_L_ring1_v1_CTRL\",\"c_L_ring2_v1_CTRL\",\"c_L_ring3_v1_CTRL\",\n                                 \"c_L_pinky1_v1_CTRL\",\"c_L_pinky2_v1_CTRL\",\"c_L_pinky3_v1_CTRL\"];\n                rigControllers = rigControllers+fingerNodeList+[\"c_L_armOptionsBox_v1_CTRL\"];\n                rigNameSpaces = rigNameSpaces+nameSpaceListTemp+[rigNameSpaces[i]];\n            \n            if(\"c_R_wrist_v1_CTRL\" in rigControllers[i]):\n                fingerNodeList = [\"c_R_thumb1_v1_CTRL\",\"c_R_thumb2_v1_CTRL\",\"c_R_thumb3_v1_CTRL\",\n                                 \"c_R_index1_v1_CTRL\",\"c_R_index2_v1_CTRL\",\"c_R_index3_v1_CTRL\",\n                                 \"c_R_middle1_v1_CTRL\",\"c_R_middle2_v1_CTRL\",\"c_R_middle3_v1_CTRL\",\n                                 \"c_R_ring1_v1_CTRL\",\"c_R_ring2_v1_CTRL\",\"c_R_ring3_v1_CTRL\",\n                                 \"c_R_pinky1_v1_CTRL\",\"c_R_pinky2_v1_CTRL\",\"c_R_pinky3_v1_CTRL\"];\n                rigControllers = rigControllers+fingerNodeList+[\"c_R_armOptionsBox_v1_CTRL\"];\n                rigNameSpaces = rigNameSpaces+nameSpaceListTemp+[rigNameSpaces[i]];\n"
		+ "            \n            \n            \n            \n            node = rigControllers[i].replace(rigNameSpaces[i],\"\") if(rigNameSpaces[i] != \"\") else rigControllers[i];\n            if(\"_L_\" in node or \"_R_\" in node):\n                attributes = py.listAttr(rigNameSpaces[i]+node,k=1);\n                ii=0;\n                while(ii < len(attributes)):\n                    if(\"_L_\" in rigControllers[i]):\n                        target = rigNameSpaces[i]+node.replace(\"_L_\",\"_R_\");\n                    else:\n                        target = rigNameSpaces[i]+node.replace(\"_R_\",\"_L_\");\n                    value = py.getAttr(rigNameSpaces[i]+node+\".\"+attributes[ii]);\n                    if(\"leg\" in rigNameSpaces[i]+node or \"arm\" in rigNameSpaces[i]+node):\n                        if(\"rotateZ\" in attributes[ii] or \"rotateY\" in attributes[ii] or \"translateX\" in attributes[ii]):\n                            if(\"OptionsBox\" not in rigControllers[i]):\n                                value = value*-1;\n                    py.setAttr(target+\".\"+attributes[ii],value);\n"
		+ "                    ii+=1;\n            i+=1;\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   SWITCH SPACE BETWEEN LOCAL AND WORLD                                      #\n#.............................................................................#\n#.............................................................................#\n###############################################################################  \ndef space():\n    #TRANSLATION\n    if(py.currentCtx(q=1) == \"moveSuperContext\"):\n        if(py.manipMoveContext(\"Move\",mode=1,q=1) == 2):\n            py.manipMoveContext(\"Move\",mode=0,e=1);\n            py.headsUpMessage('\"Successfully set the Move Tool to LOCAL mode!\" - HiGGiE', t=1);\n        else:\n            py.manipMoveContext(\"Move\",mode=2,e=1);\n            py.headsUpMessage('\"Successfully set the Move Tool to WORLD mode!\" - HiGGiE', t=1);\n"
		+ "    #ROTATION  \n    elif(py.currentCtx(q=1) == \"RotateSuperContext\"): \n        if(py.manipRotateContext(\"Rotate\",mode=1,q=1) == 1):\n            py.manipRotateContext(\"Rotate\",mode=0,e=1);\n            py.headsUpMessage('\"Successfully set the Rotate Tool to LOCAL mode!\" - HiGGiE', t=1);\n        else:\n            py.manipRotateContext(\"Rotate\",mode=1,e=1);\n            py.headsUpMessage('\"Successfully set the Rotate Tool to WORLD mode!\" - HiGGiE', t=1);\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   TOGGLE CHARACTER CAMERA                                                   #\n#.............................................................................#\n#.............................................................................#\n###############################################################################  \ndef characterCamera(nameSpaceOrchestra):\n"
		+ "    global previousCamera\n    currentCamera = py.lookThru(q=1);\n    if(currentCamera != nameSpaceOrchestra+\"c_M_character_v1_CAM\"):\n        #SELECT CHARACTER CAMERA IF IT EXISTS\n        if(py.objExists(nameSpaceOrchestra+\"c_M_character_v1_CAM\") == 1):\n            previousCamera = currentCamera;\n            py.lookThru(nameSpaceOrchestra+\"c_M_character_v1_CAM\");\n        else:\n            py.headsUpMessage('\"Character Camera does not exist.\" - HiGGiE', t=1);\n            print \"Character Camera does not exist.\";\n    else:\n        #SELECT PREVIOUS CAMERA IF IT EXISTS (IF NOT, THEN PERSPECTIVE CAMERA)\n        if(py.objExists(previousCamera) == 1):\n            py.lookThru(previousCamera);\n        else:\n            try:\n                py.lookThru(\"persp\");\n            except:\n                py.headsUpMessage('\"Previous Camera does not exist.\" - HiGGiE', t=1);\n                print \"Previous Camera does not exist.\";\n###############################################################################\n#.............................................................................#\n"
		+ "#.............................................................................#\n#   SWITCH WEAPON ATTACHMENT/PARENT                                           #\n#.............................................................................#\n#.............................................................................#\n############################################################################### \ndef instrument(note):\n    #HIGH IS WEAPON; LOW IS SPACE\n    itemControllers = [];\n    itemTargets = [];\n    switched = [];\n    selections = py.ls(sl=1);\n    previousKeyPosition = 0.01;\n    if(len(selections) > 0):\n        i=0;\n        #GET LIST OF WEAPONS\n        while(i < len(selections) and note == \"high\"):\n            WiGGiE = py.listAttr(selections[i], st=[\"WiGGiE\"], r=1);\n            if(isinstance(WiGGiE, list) == True):\n                if(isinstance(selections[i][-1],int) == 0):\n                    itemControllers.append(selections[i]);\n                    switched.append(1);\n            i+=1;\n        i=0;\n        #OR GET LIST OF OPTION BOXES\n"
		+ "        while(i < len(selections) and note == \"low\"):\n            RiGGiE = py.listAttr(selections[i], st=[\"RiGGiE\"], r=1);\n            if(isinstance(RiGGiE, list) == True and \"OptionsBox\" in selections[i]):\n                if(isinstance(selections[i][-1],int) == 0):\n                    itemControllers.append(selections[i]);\n                    try:\n                        value = py.getAttr(itemControllers[i]+\".SWITCH_SPACE\");\n                        if(value >= 1):\n                            switched.append(1);\n                        else:\n                            switched.append(0);\n                    except:\n                        valueNeck = py.getAttr(itemControllers[i]+\".SWITCH_NECK_SPACE\");\n                        valueHead = py.getAttr(itemControllers[i]+\".SWITCH_HEAD_SPACE\");\n                        if(valueNeck >= 1 or valueHead >= 1):\n                            switched.append(1);\n                        else:\n                            switched.append(0);\n            i+=1;\n        if(len(itemControllers) > 0 and 1 in switched):\n"
		+ "            currentFrame = py.currentTime(q=1);\n            #GENERATE TARGET ITEM LIST\n            i=0;\n            while(i < len(itemControllers) and note == \"low\"):\n                element = itemControllers[i].split(\"_\")[-3];\n                if(\"arm\" in element):\n                    itemTargets.append(itemControllers[i].replace(element,\"shoulder\"));\n                elif(\"leg\" in element):\n                    itemTargets.append(itemControllers[i].replace(element,\"hip\"));\n                elif(\"frontLeg\" in element):\n                    itemTargets.append(itemControllers[i].replace(element,\"elbow\"));\n                elif(\"hindLeg\" in element):\n                    itemTargets.append(itemControllers[i].replace(element,\"stifle\"));  \n                elif(\"head\" in element):#!\n                    itemTargets.append(itemControllers[i].replace(element,\"neck\"));\n                    itemControllers.append(itemControllers[i]);i+=1;\n                    itemTargets.append(itemControllers[i].replace(element,\"head\"));\n                    headIndex = i;\n"
		+ "                i+=1;\n            #SWITCH ATTRIBUTES WHILE MANTAINING THE POSITION    \n            print itemControllers\n            print itemTargets\n            i=0;\n            while(i < len(itemControllers)):\n                #SETUP LOCATOR TO OFFSET POSITION\n                if(note == \"high\"):\n                    py.setKeyframe(itemControllers[i], t=currentFrame-previousKeyPosition, s=0, rk=1);\n                    py.setKeyframe(itemControllers[i], t=currentFrame-previousKeyPosition, at=\"ATTACHMENT\", s=0, rk=0);\n                    weaponGroup = itemControllers[i].replace(\"CTRL\",\"GRP\");\n                    itemDuplicate = py.duplicate(itemControllers[i],ic=0,rc=1,rr=1)[0];#py.spaceLocator(p=(0,0,0))[0];\n                elif(note == \"low\"):\n                    print \"c\"\n                    py.setKeyframe(itemControllers[i], t=currentFrame-previousKeyPosition, s=0, rk=1);\n                    try:\n                        py.setKeyframe(itemControllers[i], t=currentFrame-previousKeyPosition, at=\"SPACE\", s=0, rk=0);\n"
		+ "                    except:\n                        py.setKeyframe(itemControllers[i], t=currentFrame-previousKeyPosition, at=\"NECK_SPACE\", s=0, rk=0);\n                        py.setKeyframe(itemControllers[i], t=currentFrame-previousKeyPosition, at=\"HEAD_SPACE\", s=0, rk=0);\n                    py.setKeyframe(itemTargets[i], t=currentFrame-previousKeyPosition, s=0, rk=1);\n                    weaponGroup = itemTargets[i].replace(\"CTRL\",\"GRP\");\n                    itemDuplicate = py.duplicate(itemTargets[i],ic=0,rc=1,rr=1)[0];#py.spaceLocator(p=(0,0,0))[0];\n                py.setAttr(itemDuplicate+\".tx\", l=0, k=1, cb=1);\n                py.setAttr(itemDuplicate+\".ty\", l=0, k=1, cb=1);\n                py.setAttr(itemDuplicate+\".tz\", l=0, k=1, cb=1);\n                py.setAttr(itemDuplicate+\".rx\", l=0, k=1, cb=1);\n                py.setAttr(itemDuplicate+\".ry\", l=0, k=1, cb=1);\n                py.setAttr(itemDuplicate+\".rz\", l=0, k=1, cb=1);\n                py.parent(itemDuplicate,w=1);\n                #SWITCH WEAPON CONTROLLERS ATTACHMENT POINT\n"
		+ "                if(note == \"high\"):\n                    value = py.getAttr(itemControllers[i]+\".SWITCH_PARENT\");\n                    if(value != 0):\n                        py.setAttr(itemControllers[i]+\".ATTACHMENT\", value-1);\n                        py.parent(itemDuplicate,weaponGroup);\n                        translations = list(py.getAttr(itemDuplicate+\".t\")[0]);\n                        rotations = list(py.getAttr(itemDuplicate+\".r\")[0]);\n                elif(note == \"low\"):\n                    try:\n                        value = py.getAttr(itemControllers[i]+\".SWITCH_SPACE\");\n                        if(value != 0):\n                            py.setAttr(itemControllers[i]+\".SPACE\", value-1);\n                            py.parent(itemDuplicate,weaponGroup);\n                            translations = list(py.getAttr(itemDuplicate+\".t\")[0]);\n                            rotations = list(py.getAttr(itemDuplicate+\".r\")[0]);\n                        else:\n                            rotations = [0,0,0];\n                    except:\n"
		+ "                        valueNeck = py.getAttr(itemControllers[i]+\".SWITCH_NECK_SPACE\");\n                        valueHead = py.getAttr(itemControllers[i]+\".SWITCH_HEAD_SPACE\");\n                        if(valueNeck != 0 or valueHead != 0):\n                            if(valueNeck != 0):\n                                py.setAttr(itemControllers[i]+\".NECK_SPACE\", valueNeck-1);\n                            if(valueHead != 0 and i == headIndex):\n                                py.setAttr(itemControllers[i]+\".HEAD_SPACE\", valueHead-1);\n                            py.parent(itemDuplicate,weaponGroup);\n                            translations = list(py.getAttr(itemDuplicate+\".t\")[0]);\n                            rotations = list(py.getAttr(itemDuplicate+\".r\")[0]);\n                        else:\n                            rotations = [0,0,0];\n                #TRANSFER LOCATOR VALUES TO WEAPON CONTROLLER\n                if(note == \"high\"):\n                    try:\n                        py.setAttr(itemControllers[i]+\".t\", translations[0],translations[1],translations[2]);\n"
		+ "                        py.setAttr(itemControllers[i]+\".r\", rotations[0],rotations[1],rotations[2]);\n                        py.setKeyframe(itemControllers[i], t=currentFrame, s=0, rk=1);\n                        py.setKeyframe(itemControllers[i], t=currentFrame, at=\"ATTACHMENT\", s=0, rk=0);\n                    except:\n                        print \"'WARNING: Try failed on high... - HiGGiE'\";\n                elif(note == \"low\"):\n                    try:\n                        print itemTargets[i]\n                        print rotations\n                        py.setAttr(itemTargets[i]+\".r\", rotations[0],rotations[1],rotations[2]);\n                        py.setKeyframe(itemControllers[i], t=currentFrame, s=0, rk=1);\n                        py.setKeyframe(itemControllers[i], t=currentFrame, at=\"SPACE\", s=0, rk=0);\n                        py.setKeyframe(itemTargets[i], t=currentFrame, s=0, rk=1);\n                    except:\n                        print \"'WARNING: Try failed on low... - HiGGiE'\";\n                py.delete(itemDuplicate);\n"
		+ "                i+=1;\n            #SET SPACE ATTRIBUTE BACK TO UNDEFINED \"----------\"\n            i=0;\n            while(i < len(itemControllers)):\n                try:\n                    if(note == \"high\"):\n                        py.setAttr(itemControllers[i]+\".SWITCH_PARENT\", 0);\n                    elif(note == \"low\"):\n                        py.setAttr(itemControllers[i]+\".SWITCH_SPACE\", 0);\n                except:\n                    if(note == \"low\"):\n                        py.setAttr(itemControllers[i]+\".SWITCH_NECK_SPACE\", 0);\n                        py.setAttr(itemControllers[i]+\".SWITCH_HEAD_SPACE\", 0);\n                i+=1;\n        py.select(selections,r=1);    \n###############################################################################\n#.............................................................................#\n#.............................................................................#\n#   ACTIVATE THE SCRIPTJOBS                                                   #\n#.............................................................................#\n"
		+ "#.............................................................................#\n############################################################################### \ndef maestro(nameSpaceOrchestra):\n    global sceneOpenScriptJob\n    global selectionScriptJob\n    global timelinesScriptJob\n    global weaponSpaceScriptJob\n    global controllerSpaceScriptJob\n    units = \"py.currentUnit(time='ntsc');py.playbackOptions(ps=1,min=0,e=1);\"\n    timeSettings = units+\"py.currentTime(round(py.currentTime(q=1),0));\"\n    sceneOpenScriptJob = py.scriptJob(e=[\"SceneOpened\", timeSettings]);\n    selectionScriptJob = py.scriptJob(e=[\"SelectionChanged\", \"piano('black')\"], kws=1, cu=1);\n    timelinesScriptJob = py.scriptJob(e=[\"timeChanged\", \"piano('white')\"], kws=1, cu=1);\n    weaponSpaceScriptJob = py.scriptJob(ac=[nameSpaceOrchestra+\"c_M_evaluator_v1_LOC.rx\", \"instrument('high')\"], kws=1, cu=1);\n    controllerSpaceScriptJob = py.scriptJob(ac=[nameSpaceOrchestra+\"c_M_evaluator_v1_LOC.ry\", \"instrument('low')\"], kws=1, cu=1);\n    py.headsUpMessage('\"Hi '+str(getpass.getuser())+'! The rig is ready for animation!\" - HiGGiE', t=4);\n"
		+ "###############################################################################\n# CREATE PIANO HOTKEY SET                                                     #\n###############################################################################\n    initialHotkeySet = py.hotkeySet(cu=1,q=1);\n    if(py.hotkeySet(\"PIANO\", ex=1) == 0):\n        py.hotkeySet(\"PIANO\", cu=1);\n    currentHotkeySet = py.hotkeySet(cu=1,q=1);\n    py.hotkeySet(\"PIANO\", cu=1, e=1);\n###############################################################################\n# ADD PICKWALK UP HOTKEY \"D\"                                                  #\n###############################################################################\n    theKey = \"d\";\n    if(py.runTimeCommand(\"MATCH\", ex=1) == 1):\n        py.runTimeCommand(\"MATCH\", delete=1, e=1);\n    py.runTimeCommand(\"MATCH\",ann=\"IKFK Match\",cl=\"python\",c=(\"match();\"));\n    MATCH = py.nameCommand(\"MATCH\", ann=\"IKFK Match\", c=\"MATCH\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"MATCH\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n"
		+ "        py.hotkey(k=theKey, ctl=0, n=\"MATCH\");\n###############################################################################\n# ADD PICKWALK UP HOTKEY \"Q\"                                                  #\n###############################################################################\n    theKey = \"q\";\n    if(py.runTimeCommand(\"WALKUP\", ex=1) == 1):\n        py.runTimeCommand(\"WALKUP\", delete=1, e=1);\n    py.runTimeCommand(\"WALKUP\",ann=\"PickWalks Up\",cl=\"python\",c=(\"walk(0);\"));\n    WALKUP = py.nameCommand(\"WALKUP\", ann=\"PickWalks Up\", c=\"WALKUP\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"WALKUP\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n        py.hotkey(k=theKey, ctl=0, n=\"WALKUP\");\n###############################################################################\n# ADD PICKWALK DOWN HOTKEY \"A\"                                                #\n###############################################################################\n    theKey = \"a\";\n    if(py.runTimeCommand(\"WALKDOWN\", ex=1) == 1):\n        py.runTimeCommand(\"WALKDOWN\", delete=1, e=1);\n"
		+ "    py.runTimeCommand(\"WALKDOWN\",ann=\"PickWalks Down\",cl=\"python\",c=(\"walk(1);\"));\n    WALKDOWN = py.nameCommand(\"WALKDOWN\", ann=\"PickWalks Down\", c=\"WALKDOWN\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"WALKDOWN\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n        py.hotkey(k=theKey, ctl=0, n=\"WALKDOWN\");\n###############################################################################\n# ADD T-POSE HOTKEY \"T\"                                                       #\n###############################################################################\n    theKey = \"t\";\n    if(py.runTimeCommand(\"TPOSE\", ex=1) == 1):\n        py.runTimeCommand(\"TPOSE\", delete=1, e=1);\n    py.runTimeCommand(\"TPOSE\",ann=\"Sets to T pose\",cl=\"python\",c=(\"pose('tpose');\"));\n    TPOSE = py.nameCommand(\"TPOSE\", ann=\"Sets to T pose\", c=\"TPOSE\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"TPOSE\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n        py.hotkey(k=theKey, ctl=0, n=\"TPOSE\");\n###############################################################################\n"
		+ "# ADD SPACE SWITCH HOTKEY \"C\"                                                 #\n###############################################################################\n    theKey = \"c\";\n    if(py.runTimeCommand(\"SPACE\", ex=1) == 1):\n        py.runTimeCommand(\"SPACE\", delete=1, e=1);\n    py.runTimeCommand(\"SPACE\",ann=\"Switch local:world space\",cl=\"python\",c=(\"space();\"));\n    SPACE = py.nameCommand(\"SPACE\", ann=\"Switch local:world space\", c=\"SPACE\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"SPACE\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n        py.hotkey(k=theKey, ctl=0, n=\"SPACE\");\n###############################################################################\n# ADD MIRROR POSE HOTKEY \"M\"                                                  #\n###############################################################################\n    theKey = \"m\";\n    if(py.runTimeCommand(\"MIRROR\", ex=1) == 1):\n        py.runTimeCommand(\"MIRROR\", delete=1, e=1);\n    py.runTimeCommand(\"MIRROR\",ann=\"Mirror pose to the other side\",cl=\"python\",c=(\"mirror();\"));\n"
		+ "    MIRROR = py.nameCommand(\"MIRROR\", ann=\"Mirror pose to the other side\", c=\"MIRROR\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"MIRROR\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n        py.hotkey(k=theKey, ctl=0, n=\"MIRROR\");\n###############################################################################\n# ADD T-POSE HOTKEY \"T\"                                                       #\n###############################################################################\n    theKey = \"x\";\n    if(py.runTimeCommand(\"SELECT\", ex=1) == 1):\n        py.runTimeCommand(\"SELECT\", delete=1, e=1);\n    py.runTimeCommand(\"SELECT\",ann=\"Selects hierarchy\",cl=\"python\",c=(\"pose('select');\"));\n    SELECT = py.nameCommand(\"SELECT\", ann=\"Selects hierarchy\", c=\"SELECT\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"SELECT\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n        py.hotkey(k=theKey, ctl=0, n=\"SELECT\");\n###############################################################################\n# ADD CAMERA SWITCH HOTKEY \"8\"                                                #\n"
		+ "###############################################################################\n    theKey = \"8\";\n    if(py.runTimeCommand(\"CAMERA\", ex=1) == 1):\n        py.runTimeCommand(\"CAMERA\", delete=1, e=1);\n    py.runTimeCommand(\"CAMERA\",ann=\"Toggles character camera\",cl=\"python\",c=(\"characterCamera(nameSpaceOrchestra);\"));\n    CAMERA = py.nameCommand(\"CAMERA\", ann=\"Toggles character camera\", c=\"CAMERA\");\n    if(py.hotkey(theKey, ctl=0, n=1, q=1) != \"CAMERA\"):\n        py.hotkey(k=theKey, ctl=0, n=\"\", rn=\"\");\n        py.hotkey(k=theKey, ctl=0, n=\"CAMERA\");\n    #FINALIZE\n    py.hotkeySet(  str(initialHotkeySet), cu=1, e=1);\n    py.headsUpMessage('\"Hi '+str(getpass.getuser())+'! The rig is ready for animation!\" - HiGGiE', t=4);\n    print '\"Hi '+str(getpass.getuser())+'! The rig is ready for animation!\" - HiGGiE';\n###############################################################################\n#.............................................................................#\n#.............................................................................#\n"
		+ "#   CREATE HOTKEY TOGGLE SHELF BUTTON                                         #\n#.............................................................................#\n#.............................................................................#\n############################################################################### \nformLayouts = mel.eval(\"global string $gShelfTopLevel;$temp=$gShelfTopLevel;\");\nshelves = py.tabLayout(formLayouts,ca=1,q=1);\ntargetShelf = \"SeasunAnimation\" if(\"SeasunAnimation\" in shelves) else \"Custom\";\ncustomShelf = formLayouts+\"|\"+targetShelf;\nshelfButtons = py.shelfLayout(customShelf,ca=1,q=1);\nif(isinstance(shelfButtons,list) == 1):\n    i=0;\n    while(i < len(shelfButtons)):\n        potentialPianoButton = py.shelfButton(shelfButtons[i],l=1,q=1);\n        if(potentialPianoButton == \"PIANO\"):\n            py.deleteUI(shelfButtons[i]);\n            break;\n        i+=1;\n###############################################################################\n#GENERATE STRING FOR THE HOTKEY TOGGLE SCRIPT                                 #\n"
		+ "###############################################################################\nhotkeyScript = \"\";\nhotkeyScriptList = [\"###############################################################################\",\n                    \"#CREATOR: SEAN 'HiGGiE' HIGGINBOTTOM                                          #\",\n                    \"###############################################################################\",\n                    \"import maya.cmds as py\",\"global previousHotkeySet\",\"previousHotkeySet = ''\",\n                    \"currentHotkeySet = py.hotkeySet(cu=1,q=1);\",\n                    \"if(currentHotkeySet != 'PIANO' and previousHotkeySet == ''):\",\n                    \"    previousHotkeySet = currentHotkeySet;\",\n                    \"elif(currentHotkeySet == 'PIANO' and previousHotkeySet == ''):\",\n                    \"    previousHotkeySet = 'Maya_Default';\",\n                    \"if(currentHotkeySet != 'PIANO' and py.hotkeySet('PIANO',ex=1) == 1):\",\n                    \"    py.hotkeySet('PIANO',cu=1,e=1);\",\n                    \"    print 'The PIANO Hotkey Set is now active! - HiGGiE'\",\n"
		+ "                    \"    py.headsUpMessage('The PIANO Hotkey Set is now active! - HiGGiE', t=4);\",\n                    \"else:\",\n                    \"    py.hotkeySet(previousHotkeySet,cu=1,e=1);\",\n                    \"    print 'The '+previousHotkeySet+' Hotkey Set is now active! - HiGGiE'\",\n                    \"    py.headsUpMessage('The '+previousHotkeySet+' Hotkey Set is now active! - HiGGiE', t=4);\"];\ni=0;\nwhile(i < len(hotkeyScriptList)):\n    hotkeyScript = hotkeyScript+str(hotkeyScriptList[i])+os.linesep;\n    i+=1;\nhotkeyToggleButton = py.shelfButton(p=customShelf,ann=\"Toggle Hotkey Sets\",l=\"PIANO\",iol=\"PIANO\",fn=\"obliqueLabelFont\",image=\"fluidCreate3DEmitter.png\",stp=\"python\",c=hotkeyScript,h=30,w=30,en=1,vis=1);\n###############################################################################\n#SEARCH FOR THE ORCHESTRA                                                     #\n###############################################################################\norchestration = py.ls(\"theOrchestra\",r=1);\nif(isinstance(orchestration,list) == 1 and len(orchestration) == 1):\n"
		+ "    orchestrationName = py.ls(\"theOrchestra\",r=1)[0].split(\":\")[-1];\n    if(len(orchestration[0]) != len(orchestrationName)):\n        nameSpaceOrchestra = orchestration[0][:-int(len(orchestrationName))];\n    else:\n        nameSpaceOrchestra = \"\";\n    maestro(nameSpaceOrchestra);\n");
	setAttr ".st" 1;
	setAttr ".stp" 1;
createNode materialInfo -n "lantern_skin:pasted__materialInfo9";
	rename -uid "7B6DA0E1-4144-91B4-F5DF-0C989D525EE8";
createNode shadingEngine -n "lantern_skin:pasted__lambert7SG";
	rename -uid "31873060-4F8E-351E-2017-B29976A60FFE";
	setAttr ".ihi" 0;
	setAttr ".ro" yes;
createNode lambert -n "lantern_skin:denglong1";
	rename -uid "AA19024D-47C3-6BC9-38CA-388DAC9E1348";
createNode shapeEditorManager -n "shapeEditorManager";
	rename -uid "33955210-4F78-7DCA-ACEF-08B8862B87A1";
	setAttr ".bsdt[0].bscd" -type "Int32Array" 2 0 1 ;
createNode poseInterpolatorManager -n "poseInterpolatorManager";
	rename -uid "E7F0F00A-4AD4-1911-40F8-3688246EE9AD";
createNode displayLayer -n "layer1";
	rename -uid "81D2E062-4A0C-6466-68A6-089198CC994C";
	setAttr ".v" no;
	setAttr ".do" 1;
createNode displayLayer -n "layer2";
	rename -uid "27B4B796-4239-25F5-B7A1-F1B665C1564F";
	setAttr ".v" no;
	setAttr ".do" 2;
select -ne :time1;
	setAttr -av -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -av -k on ".nds";
	setAttr -cb on ".bnm";
	setAttr -k on ".o" 0;
	setAttr -av ".unw";
	setAttr -k on ".etw";
	setAttr -k on ".tps";
	setAttr -k on ".tms";
select -ne :hardwareRenderingGlobals;
	setAttr ".otfna" -type "stringArray" 22 "NURBS Curves" "NURBS Surfaces" "Polygons" "Subdiv Surface" "Particles" "Particle Instance" "Fluids" "Strokes" "Image Planes" "UI" "Lights" "Cameras" "Locators" "Joints" "IK Handles" "Deformers" "Motion Trails" "Components" "Hair Systems" "Follicles" "Misc. UI" "Ornaments"  ;
	setAttr ".otfva" -type "Int32Array" 22 0 1 1 1 1 1
		 1 1 1 0 0 0 0 0 0 0 0 0
		 0 0 0 0 ;
	setAttr ".fprt" yes;
select -ne :renderPartition;
	setAttr -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -k on ".nds";
	setAttr -cb on ".bnm";
	setAttr -s 14 ".st";
	setAttr -cb on ".an";
	setAttr -cb on ".pt";
select -ne :renderGlobalsList1;
	setAttr -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -k on ".nds";
	setAttr -cb on ".bnm";
select -ne :defaultShaderList1;
	setAttr -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -k on ".nds";
	setAttr -cb on ".bnm";
	setAttr -s 11 ".s";
select -ne :postProcessList1;
	setAttr -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -k on ".nds";
	setAttr -cb on ".bnm";
	setAttr -s 2 ".p";
select -ne :defaultRenderUtilityList1;
	setAttr -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -k on ".nds";
	setAttr -cb on ".bnm";
select -ne :defaultRenderingList1;
select -ne :defaultTextureList1;
select -ne :initialShadingGroup;
	setAttr -av -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -av -k on ".nds";
	setAttr -cb on ".bnm";
	setAttr -k on ".mwc";
	setAttr -cb on ".an";
	setAttr -cb on ".il";
	setAttr -cb on ".vo";
	setAttr -cb on ".eo";
	setAttr -cb on ".fo";
	setAttr -cb on ".epo";
	setAttr -k on ".ro" yes;
select -ne :initialParticleSE;
	setAttr -av -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -av -k on ".nds";
	setAttr -cb on ".bnm";
	setAttr -k on ".mwc";
	setAttr -cb on ".an";
	setAttr -cb on ".il";
	setAttr -cb on ".vo";
	setAttr -cb on ".eo";
	setAttr -cb on ".fo";
	setAttr -cb on ".epo";
	setAttr -k on ".ro" yes;
select -ne :defaultRenderGlobals;
	setAttr ".mcfr" 30;
select -ne :defaultResolution;
	setAttr -av -k on ".cch";
	setAttr -k on ".ihi";
	setAttr -av -k on ".nds";
	setAttr -k on ".bnm";
	setAttr -av -k on ".w";
	setAttr -av -k on ".h";
	setAttr -av -k on ".pa" 1;
	setAttr -av -k on ".al";
	setAttr -av -k on ".dar";
	setAttr -av -k on ".ldar";
	setAttr -k on ".dpi";
	setAttr -av -k on ".off";
	setAttr -av -k on ".fld";
	setAttr -av -k on ".zsl";
	setAttr -k on ".isu";
	setAttr -k on ".pdu";
select -ne :hardwareRenderGlobals;
	setAttr -k on ".cch";
	setAttr -cb on ".ihi";
	setAttr -k on ".nds";
	setAttr -cb on ".bnm";
	setAttr -k off ".ctrs" 256;
	setAttr -av -k off ".btrs" 512;
	setAttr -k off ".fbfm";
	setAttr -k off -cb on ".ehql";
	setAttr -k off -cb on ".eams";
	setAttr -k off -cb on ".eeaa";
	setAttr -k off -cb on ".engm";
	setAttr -k off -cb on ".mes";
	setAttr -k off -cb on ".emb";
	setAttr -av -k off -cb on ".mbbf";
	setAttr -k off -cb on ".mbs";
	setAttr -k off -cb on ".trm";
	setAttr -k off -cb on ".tshc";
	setAttr -k off ".enpt";
	setAttr -k off -cb on ".clmt";
	setAttr -k off -cb on ".tcov";
	setAttr -k off -cb on ".lith";
	setAttr -k off -cb on ".sobc";
	setAttr -k off -cb on ".cuth";
	setAttr -k off -cb on ".hgcd";
	setAttr -k off -cb on ".hgci";
	setAttr -k off -cb on ".mgcs";
	setAttr -k off -cb on ".twa";
	setAttr -k off -cb on ".twz";
	setAttr -k on ".hwcc";
	setAttr -k on ".hwdp";
	setAttr -k on ".hwql";
	setAttr -k on ".hwfr" 30;
	setAttr -k on ".soll";
	setAttr -k on ".sosl";
	setAttr -k on ".bswa";
	setAttr -k on ".shml";
	setAttr -k on ".hwel";
relationship "link" ":lightLinker1" ":initialShadingGroup.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" ":initialParticleSE.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "set1.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "set2.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "set3.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "set4.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "set5.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "R_luWeiLouBladeSG.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "L_axeSG.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "R_longBladeSG.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "R_quiverSG.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "R_swordShellSG.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "R_bladeShellSG.message" ":defaultLightSet.message";
relationship "link" ":lightLinker1" "lantern_skin:pasted__lambert7SG.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" ":initialShadingGroup.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" ":initialParticleSE.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "set1.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "set2.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "set3.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "set4.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "set5.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "R_luWeiLouBladeSG.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "L_axeSG.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "R_longBladeSG.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "R_quiverSG.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "R_swordShellSG.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "R_bladeShellSG.message" ":defaultLightSet.message";
relationship "shadowLink" ":lightLinker1" "lantern_skin:pasted__lambert7SG.message" ":defaultLightSet.message";
connectAttr "layerManager.dli[0]" "defaultLayer.id";
connectAttr "renderLayerManager.rlmi[0]" "defaultRenderLayer.rlid";
connectAttr ":TurtleDefaultBakeLayer.idx" ":TurtleBakeLayerManager.bli[0]";
connectAttr ":TurtleRenderOptions.msg" ":TurtleDefaultBakeLayer.rset";
connectAttr "MSPINE1_MAT.oc" "set1.ss";
connectAttr "set1.msg" "materialInfo1.sg";
connectAttr "MSPINE1_MAT.msg" "materialInfo1.m";
connectAttr "LLEG1_MAT.oc" "set2.ss";
connectAttr "set2.msg" "materialInfo2.sg";
connectAttr "LLEG1_MAT.msg" "materialInfo2.m";
connectAttr "c_L_ball_v1_CMP.mnr" "c_L_ball_v1_SR.onx";
connectAttr "c_L_ball_v1_CMP.mxr" "c_L_ball_v1_SR.omx";
connectAttr "c_L_ball_v1_CMP.ipr" "c_L_ball_v1_SR.vx";
connectAttr "c_L_bend_v1_CMP.mnr" "c_L_bend_v1_SR.onx";
connectAttr "c_L_bend_v1_CMP.mxr" "c_L_bend_v1_SR.omx";
connectAttr "c_L_bend_v1_CMP.ipr" "c_L_bend_v1_SR.vx";
connectAttr "c_L_bend_v1_SR.ox" "c_L_foot_v1_PMA.i1[1]";
connectAttr "c_L_ball_v1_SR.ox" "c_L_footMult1_v1_MDN.i1x";
connectAttr "c_L_foot_v1_PMA.o1" "c_L_footMult1_v1_MDN.i2x";
connectAttr "c_L_footMult1_v1_MDN.ox" "c_L_footMult2_v1_MDN.i1x";
connectAttr "c_L_footMult2_v1_MDN.ox" "c_L_ballFlip_v1_MDN.i1x";
connectAttr "RLEG1_MAT.oc" "set3.ss";
connectAttr "set3.msg" "materialInfo3.sg";
connectAttr "RLEG1_MAT.msg" "materialInfo3.m";
connectAttr "c_R_ball_v1_CMP.mnr" "c_R_ball_v1_SR.onx";
connectAttr "c_R_ball_v1_CMP.mxr" "c_R_ball_v1_SR.omx";
connectAttr "c_R_ball_v1_CMP.ipr" "c_R_ball_v1_SR.vx";
connectAttr "c_R_bend_v1_CMP.mnr" "c_R_bend_v1_SR.onx";
connectAttr "c_R_bend_v1_CMP.mxr" "c_R_bend_v1_SR.omx";
connectAttr "c_R_bend_v1_CMP.ipr" "c_R_bend_v1_SR.vx";
connectAttr "c_R_bend_v1_SR.ox" "c_R_foot_v1_PMA.i1[1]";
connectAttr "c_R_ball_v1_SR.ox" "c_R_footMult1_v1_MDN.i1x";
connectAttr "c_R_foot_v1_PMA.o1" "c_R_footMult1_v1_MDN.i2x";
connectAttr "c_R_footMult1_v1_MDN.ox" "c_R_footMult2_v1_MDN.i1x";
connectAttr "c_R_footMult2_v1_MDN.ox" "c_R_ballFlip_v1_MDN.i1x";
connectAttr "RARM1_MAT.oc" "set4.ss";
connectAttr "set4.msg" "materialInfo4.sg";
connectAttr "RARM1_MAT.msg" "materialInfo4.m";
connectAttr "LARM1_MAT.oc" "set5.ss";
connectAttr "set5.msg" "materialInfo5.sg";
connectAttr "LARM1_MAT.msg" "materialInfo5.m";
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default3.oc" "R_luWeiLouBladeSG.ss"
		;
connectAttr "R_luWeiLouBladeSG.msg" "materialInfo6.sg";
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default3.msg" "materialInfo6.m"
		;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default4.oc" "L_axeSG.ss";
connectAttr "L_axeSG.msg" "materialInfo7.sg";
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default4.msg" "materialInfo7.m"
		;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default2.oc" "R_longBladeSG.ss"
		;
connectAttr "R_longBladeSG.msg" "materialInfo8.sg";
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default2.msg" "materialInfo8.m"
		;
connectAttr "MapFBXASC032FBXASC035118.oc" "MaterialFBXASC032FBXASC035754.c";
connectAttr "MaterialFBXASC032FBXASC035754.oc" "R_quiverSG.ss";
connectAttr "R_quiverSG.msg" "materialInfo9.sg";
connectAttr "MaterialFBXASC032FBXASC035754.msg" "materialInfo9.m";
connectAttr "MapFBXASC032FBXASC035118.msg" "materialInfo9.t" -na;
connectAttr "place2dTexture1.o" "MapFBXASC032FBXASC035118.uv";
connectAttr "place2dTexture1.ofu" "MapFBXASC032FBXASC035118.ofu";
connectAttr "place2dTexture1.ofv" "MapFBXASC032FBXASC035118.ofv";
connectAttr "place2dTexture1.rf" "MapFBXASC032FBXASC035118.rf";
connectAttr "place2dTexture1.reu" "MapFBXASC032FBXASC035118.reu";
connectAttr "place2dTexture1.rev" "MapFBXASC032FBXASC035118.rev";
connectAttr "place2dTexture1.vt1" "MapFBXASC032FBXASC035118.vt1";
connectAttr "place2dTexture1.vt2" "MapFBXASC032FBXASC035118.vt2";
connectAttr "place2dTexture1.vt3" "MapFBXASC032FBXASC035118.vt3";
connectAttr "place2dTexture1.vc1" "MapFBXASC032FBXASC035118.vc1";
connectAttr "place2dTexture1.ofs" "MapFBXASC032FBXASC035118.fs";
connectAttr ":defaultColorMgtGlobals.cme" "MapFBXASC032FBXASC035118.cme";
connectAttr ":defaultColorMgtGlobals.cfe" "MapFBXASC032FBXASC035118.cmcf";
connectAttr ":defaultColorMgtGlobals.cfp" "MapFBXASC032FBXASC035118.cmcp";
connectAttr ":defaultColorMgtGlobals.wsn" "MapFBXASC032FBXASC035118.ws";
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default.oc" "R_swordShellSG.ss"
		;
connectAttr "R_swordShellSG.msg" "materialInfo10.sg";
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default.msg" "materialInfo10.m"
		;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default1.oc" "R_bladeShellSG.ss"
		;
connectAttr "R_bladeShellSG.msg" "materialInfo11.sg";
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default1.msg" "materialInfo11.m"
		;
connectAttr "lantern_skin:pasted__lambert7SG.msg" "lantern_skin:pasted__materialInfo9.sg"
		;
connectAttr "lantern_skin:denglong1.msg" "lantern_skin:pasted__materialInfo9.m";
connectAttr "lantern_skin:denglong1.oc" "lantern_skin:pasted__lambert7SG.ss";
connectAttr "layerManager.dli[2]" "layer1.id";
connectAttr "layerManager.dli[3]" "layer2.id";
connectAttr "set1.pa" ":renderPartition.st" -na;
connectAttr "set2.pa" ":renderPartition.st" -na;
connectAttr "set3.pa" ":renderPartition.st" -na;
connectAttr "set4.pa" ":renderPartition.st" -na;
connectAttr "set5.pa" ":renderPartition.st" -na;
connectAttr "R_luWeiLouBladeSG.pa" ":renderPartition.st" -na;
connectAttr "L_axeSG.pa" ":renderPartition.st" -na;
connectAttr "R_longBladeSG.pa" ":renderPartition.st" -na;
connectAttr "R_quiverSG.pa" ":renderPartition.st" -na;
connectAttr "R_swordShellSG.pa" ":renderPartition.st" -na;
connectAttr "R_bladeShellSG.pa" ":renderPartition.st" -na;
connectAttr "lantern_skin:pasted__lambert7SG.pa" ":renderPartition.st" -na;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default3.msg" ":defaultShaderList1.s"
		 -na;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default4.msg" ":defaultShaderList1.s"
		 -na;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default2.msg" ":defaultShaderList1.s"
		 -na;
connectAttr "MaterialFBXASC032FBXASC035754.msg" ":defaultShaderList1.s" -na;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default.msg" ":defaultShaderList1.s"
		 -na;
connectAttr "FBXASC0489FBXASC032FBXASC045FBXASC032Default1.msg" ":defaultShaderList1.s"
		 -na;
connectAttr "lantern_skin:denglong1.msg" ":defaultShaderList1.s" -na;
connectAttr "place2dTexture1.msg" ":defaultRenderUtilityList1.u" -na;
connectAttr "defaultRenderLayer.msg" ":defaultRenderingList1.r" -na;
connectAttr "MapFBXASC032FBXASC035118.msg" ":defaultTextureList1.tx" -na;
// End of body_curve.ma
